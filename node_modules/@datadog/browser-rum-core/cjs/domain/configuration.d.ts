import type { Configuration, InitConfiguration, MatchOption } from '@datadog/browser-core';
import { DefaultPrivacyLevel, TraceContextInjection } from '@datadog/browser-core';
import type { RumEventDomainContext } from '../domainContext.types';
import type { RumEvent } from '../rumEvent.types';
import type { PropagatorType, TracingOption } from './tracing/tracer.types';
export declare const DEFAULT_PROPAGATOR_TYPES: PropagatorType[];
export interface RumInitConfiguration extends InitConfiguration {
    applicationId: string;
    beforeSend?: ((event: RumEvent, context: RumEventDomainContext) => boolean) | undefined;
    excludedActivityUrls?: MatchOption[] | undefined;
    workerUrl?: string;
    compressIntakeRequests?: boolean | undefined;
    allowedTracingUrls?: Array<MatchOption | TracingOption> | undefined;
    traceSampleRate?: number | undefined;
    traceContextInjection?: TraceContextInjection | undefined;
    defaultPrivacyLevel?: DefaultPrivacyLevel | undefined;
    subdomain?: string;
    sessionReplaySampleRate?: number | undefined;
    startSessionReplayRecordingManually?: boolean | undefined;
    trackUserInteractions?: boolean | undefined;
    actionNameAttribute?: string | undefined;
    trackViewsManually?: boolean | undefined;
    trackResources?: boolean | undefined;
    trackLongTasks?: boolean | undefined;
}
export type HybridInitConfiguration = Omit<RumInitConfiguration, 'applicationId' | 'clientToken'>;
export interface RumConfiguration extends Configuration {
    actionNameAttribute: string | undefined;
    traceSampleRate: number | undefined;
    allowedTracingUrls: TracingOption[];
    excludedActivityUrls: MatchOption[];
    workerUrl: string | undefined;
    compressIntakeRequests: boolean;
    applicationId: string;
    defaultPrivacyLevel: DefaultPrivacyLevel;
    sessionReplaySampleRate: number;
    startSessionReplayRecordingManually: boolean;
    trackUserInteractions: boolean;
    trackViewsManually: boolean;
    trackResources: boolean;
    trackLongTasks: boolean;
    version?: string;
    subdomain?: string;
    customerDataTelemetrySampleRate: number;
    traceContextInjection: TraceContextInjection;
}
export declare function validateAndBuildRumConfiguration(initConfiguration: RumInitConfiguration): RumConfiguration | undefined;
export declare function serializeRumConfiguration(configuration: RumInitConfiguration): {
    session_replay_sample_rate: number | undefined;
    start_session_replay_recording_manually: boolean | undefined;
    trace_sample_rate: number | undefined;
    trace_context_injection: TraceContextInjection | undefined;
    action_name_attribute: string | undefined;
    use_allowed_tracing_urls: boolean;
    selected_tracing_propagators: PropagatorType[];
    default_privacy_level: DefaultPrivacyLevel | undefined;
    use_excluded_activity_urls: boolean;
    use_worker_url: boolean;
    compress_intake_requests: boolean | undefined;
    track_views_manually: boolean | undefined;
    track_user_interactions: boolean | undefined;
    track_resources: boolean | undefined;
    track_long_task: boolean | undefined;
} & {
    session_sample_rate: number | undefined;
    telemetry_sample_rate: number | undefined;
    telemetry_configuration_sample_rate: number | undefined;
    telemetry_usage_sample_rate: number | undefined;
    use_before_send: boolean;
    use_cross_site_session_cookie: boolean | undefined;
    use_partitioned_cross_site_session_cookie: boolean | undefined;
    use_secure_session_cookie: boolean | undefined;
    use_proxy: boolean;
    silent_multiple_init: boolean | undefined;
    track_session_across_subdomains: boolean | undefined;
    allow_fallback_to_local_storage: boolean;
    store_contexts_across_pages: boolean;
    allow_untrusted_events: boolean;
    tracking_consent: import("@datadog/browser-core").TrackingConsent | undefined;
};
