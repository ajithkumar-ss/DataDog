{"ast":null,"code":"import { combine, isTelemetryReplicationAllowed, startBatchWithReplica } from '@datadog/browser-core';\nexport function startRumBatch(configuration, lifeCycle, telemetryEventObservable, reportError, pageExitObservable, sessionExpireObservable, createEncoder) {\n  var replica = configuration.replica;\n  var batch = startBatchWithReplica(configuration, {\n    endpoint: configuration.rumEndpointBuilder,\n    encoder: createEncoder(2 /* DeflateEncoderStreamId.RUM */)\n  }, replica && {\n    endpoint: replica.rumEndpointBuilder,\n    transformMessage: function (message) {\n      return combine(message, {\n        application: {\n          id: replica.applicationId\n        }\n      });\n    },\n    encoder: createEncoder(3 /* DeflateEncoderStreamId.RUM_REPLICA */)\n  }, reportError, pageExitObservable, sessionExpireObservable);\n  lifeCycle.subscribe(13 /* LifeCycleEventType.RUM_EVENT_COLLECTED */, function (serverRumEvent) {\n    if (serverRumEvent.type === \"view\" /* RumEventType.VIEW */) {\n      batch.upsert(serverRumEvent, serverRumEvent.view.id);\n    } else {\n      batch.add(serverRumEvent);\n    }\n  });\n  telemetryEventObservable.subscribe(function (event) {\n    return batch.add(event, isTelemetryReplicationAllowed(configuration));\n  });\n  return batch;\n}","map":{"version":3,"names":["combine","isTelemetryReplicationAllowed","startBatchWithReplica","startRumBatch","configuration","lifeCycle","telemetryEventObservable","reportError","pageExitObservable","sessionExpireObservable","createEncoder","replica","batch","endpoint","rumEndpointBuilder","encoder","transformMessage","message","application","id","applicationId","subscribe","serverRumEvent","type","upsert","view","add","event"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\transport\\startRumBatch.ts"],"sourcesContent":["import type { Context, TelemetryEvent, Observable, RawError, PageExitEvent, Encoder } from '@datadog/browser-core'\nimport {\n  DeflateEncoderStreamId,\n  combine,\n  isTelemetryReplicationAllowed,\n  startBatchWithReplica,\n} from '@datadog/browser-core'\nimport type { RumConfiguration } from '../domain/configuration'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport { LifeCycleEventType } from '../domain/lifeCycle'\nimport { RumEventType } from '../rawRumEvent.types'\nimport type { RumEvent } from '../rumEvent.types'\n\nexport function startRumBatch(\n  configuration: RumConfiguration,\n  lifeCycle: LifeCycle,\n  telemetryEventObservable: Observable<TelemetryEvent & Context>,\n  reportError: (error: RawError) => void,\n  pageExitObservable: Observable<PageExitEvent>,\n  sessionExpireObservable: Observable<void>,\n  createEncoder: (streamId: DeflateEncoderStreamId) => Encoder\n) {\n  const replica = configuration.replica\n\n  const batch = startBatchWithReplica(\n    configuration,\n    {\n      endpoint: configuration.rumEndpointBuilder,\n      encoder: createEncoder(DeflateEncoderStreamId.RUM),\n    },\n    replica && {\n      endpoint: replica.rumEndpointBuilder,\n      transformMessage: (message) => combine(message, { application: { id: replica.applicationId } }),\n      encoder: createEncoder(DeflateEncoderStreamId.RUM_REPLICA),\n    },\n    reportError,\n    pageExitObservable,\n    sessionExpireObservable\n  )\n\n  lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (serverRumEvent: RumEvent & Context) => {\n    if (serverRumEvent.type === RumEventType.VIEW) {\n      batch.upsert(serverRumEvent, serverRumEvent.view.id)\n    } else {\n      batch.add(serverRumEvent)\n    }\n  })\n\n  telemetryEventObservable.subscribe((event) => batch.add(event, isTelemetryReplicationAllowed(configuration)))\n\n  return batch\n}\n"],"mappings":"AACA,SAEEA,OAAO,EACPC,6BAA6B,EAC7BC,qBAAqB,QAChB,uBAAuB;AAO9B,OAAM,SAAUC,aAAaA,CAC3BC,aAA+B,EAC/BC,SAAoB,EACpBC,wBAA8D,EAC9DC,WAAsC,EACtCC,kBAA6C,EAC7CC,uBAAyC,EACzCC,aAA4D;EAE5D,IAAMC,OAAO,GAAGP,aAAa,CAACO,OAAO;EAErC,IAAMC,KAAK,GAAGV,qBAAqB,CACjCE,aAAa,EACb;IACES,QAAQ,EAAET,aAAa,CAACU,kBAAkB;IAC1CC,OAAO,EAAEL,aAAa;GACvB,EACDC,OAAO,IAAI;IACTE,QAAQ,EAAEF,OAAO,CAACG,kBAAkB;IACpCE,gBAAgB,EAAE,SAAAA,CAACC,OAAO;MAAK,OAAAjB,OAAO,CAACiB,OAAO,EAAE;QAAEC,WAAW,EAAE;UAAEC,EAAE,EAAER,OAAO,CAACS;QAAa;MAAE,CAAE,CAAC;IAAhE,CAAgE;IAC/FL,OAAO,EAAEL,aAAa;GACvB,EACDH,WAAW,EACXC,kBAAkB,EAClBC,uBAAuB,CACxB;EAEDJ,SAAS,CAACgB,SAAS,kDAAyC,UAACC,cAAkC;IAC7F,IAAIA,cAAc,CAACC,IAAI,qCAAwB;MAC7CX,KAAK,CAACY,MAAM,CAACF,cAAc,EAAEA,cAAc,CAACG,IAAI,CAACN,EAAE,CAAC;IACtD,CAAC,MAAM;MACLP,KAAK,CAACc,GAAG,CAACJ,cAAc,CAAC;IAC3B;EACF,CAAC,CAAC;EAEFhB,wBAAwB,CAACe,SAAS,CAAC,UAACM,KAAK;IAAK,OAAAf,KAAK,CAACc,GAAG,CAACC,KAAK,EAAE1B,6BAA6B,CAACG,aAAa,CAAC,CAAC;EAA9D,CAA8D,CAAC;EAE7G,OAAOQ,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}