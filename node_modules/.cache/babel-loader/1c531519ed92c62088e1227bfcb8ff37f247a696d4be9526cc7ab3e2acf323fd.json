{"ast":null,"code":"import { instrumentMethod } from '../../tools/instrumentMethod';\nimport { clocksNow } from '../../tools/utils/timeUtils';\nimport { computeStackTrace, computeStackTraceFromOnErrorMessage } from '../../tools/stackTrace/computeStackTrace';\nimport { computeRawError } from './error';\nimport { ErrorSource } from './error.types';\nexport function trackRuntimeError(errorObservable) {\n  var handleRuntimeError = function (stackTrace, originalError) {\n    var rawError = computeRawError({\n      stackTrace: stackTrace,\n      originalError: originalError,\n      startClocks: clocksNow(),\n      nonErrorPrefix: \"Uncaught\" /* NonErrorPrefix.UNCAUGHT */,\n      source: ErrorSource.SOURCE,\n      handling: \"unhandled\" /* ErrorHandling.UNHANDLED */\n    });\n    errorObservable.notify(rawError);\n  };\n  var stopInstrumentingOnError = instrumentOnError(handleRuntimeError).stop;\n  var stopInstrumentingOnUnhandledRejection = instrumentUnhandledRejection(handleRuntimeError).stop;\n  return {\n    stop: function () {\n      stopInstrumentingOnError();\n      stopInstrumentingOnUnhandledRejection();\n    }\n  };\n}\nexport function instrumentOnError(callback) {\n  return instrumentMethod(window, 'onerror', function (_a) {\n    var _b = _a.parameters,\n      messageObj = _b[0],\n      url = _b[1],\n      line = _b[2],\n      column = _b[3],\n      errorObj = _b[4];\n    var stackTrace;\n    if (errorObj instanceof Error) {\n      stackTrace = computeStackTrace(errorObj);\n    } else {\n      stackTrace = computeStackTraceFromOnErrorMessage(messageObj, url, line, column);\n    }\n    callback(stackTrace, errorObj !== null && errorObj !== void 0 ? errorObj : messageObj);\n  });\n}\nexport function instrumentUnhandledRejection(callback) {\n  return instrumentMethod(window, 'onunhandledrejection', function (_a) {\n    var e = _a.parameters[0];\n    var reason = e.reason || 'Empty reason';\n    var stack = computeStackTrace(reason);\n    callback(stack, reason);\n  });\n}","map":{"version":3,"names":["instrumentMethod","clocksNow","computeStackTrace","computeStackTraceFromOnErrorMessage","computeRawError","ErrorSource","trackRuntimeError","errorObservable","handleRuntimeError","stackTrace","originalError","rawError","startClocks","nonErrorPrefix","source","SOURCE","handling","notify","stopInstrumentingOnError","instrumentOnError","stop","stopInstrumentingOnUnhandledRejection","instrumentUnhandledRejection","callback","window","_a","_b","parameters","messageObj","url","line","column","errorObj","Error","e","reason","stack"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-core\\src\\domain\\error\\trackRuntimeError.ts"],"sourcesContent":["import { instrumentMethod } from '../../tools/instrumentMethod'\nimport type { Observable } from '../../tools/observable'\nimport { clocksNow } from '../../tools/utils/timeUtils'\nimport type { StackTrace } from '../../tools/stackTrace/computeStackTrace'\nimport { computeStackTrace, computeStackTraceFromOnErrorMessage } from '../../tools/stackTrace/computeStackTrace'\nimport { computeRawError } from './error'\nimport type { RawError } from './error.types'\nimport { ErrorHandling, ErrorSource, NonErrorPrefix } from './error.types'\n\nexport type UnhandledErrorCallback = (stackTrace: StackTrace, originalError?: any) => any\n\nexport function trackRuntimeError(errorObservable: Observable<RawError>) {\n  const handleRuntimeError = (stackTrace: StackTrace, originalError?: any) => {\n    const rawError = computeRawError({\n      stackTrace,\n      originalError,\n      startClocks: clocksNow(),\n      nonErrorPrefix: NonErrorPrefix.UNCAUGHT,\n      source: ErrorSource.SOURCE,\n      handling: ErrorHandling.UNHANDLED,\n    })\n    errorObservable.notify(rawError)\n  }\n  const { stop: stopInstrumentingOnError } = instrumentOnError(handleRuntimeError)\n  const { stop: stopInstrumentingOnUnhandledRejection } = instrumentUnhandledRejection(handleRuntimeError)\n\n  return {\n    stop: () => {\n      stopInstrumentingOnError()\n      stopInstrumentingOnUnhandledRejection()\n    },\n  }\n}\n\nexport function instrumentOnError(callback: UnhandledErrorCallback) {\n  return instrumentMethod(window, 'onerror', ({ parameters: [messageObj, url, line, column, errorObj] }) => {\n    let stackTrace\n    if (errorObj instanceof Error) {\n      stackTrace = computeStackTrace(errorObj)\n    } else {\n      stackTrace = computeStackTraceFromOnErrorMessage(messageObj, url, line, column)\n    }\n    callback(stackTrace, errorObj ?? messageObj)\n  })\n}\n\nexport function instrumentUnhandledRejection(callback: UnhandledErrorCallback) {\n  return instrumentMethod(window, 'onunhandledrejection', ({ parameters: [e] }) => {\n    const reason = e.reason || 'Empty reason'\n    const stack = computeStackTrace(reason)\n    callback(stack, reason)\n  })\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,8BAA8B;AAE/D,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAASC,iBAAiB,EAAEC,mCAAmC,QAAQ,0CAA0C;AACjH,SAASC,eAAe,QAAQ,SAAS;AAEzC,SAAwBC,WAAW,QAAwB,eAAe;AAI1E,OAAM,SAAUC,iBAAiBA,CAACC,eAAqC;EACrE,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,UAAsB,EAAEC,aAAmB;IACrE,IAAMC,QAAQ,GAAGP,eAAe,CAAC;MAC/BK,UAAU,EAAAA,UAAA;MACVC,aAAa,EAAAA,aAAA;MACbE,WAAW,EAAEX,SAAS,EAAE;MACxBY,cAAc;MACdC,MAAM,EAAET,WAAW,CAACU,MAAM;MAC1BC,QAAQ;KACT,CAAC;IACFT,eAAe,CAACU,MAAM,CAACN,QAAQ,CAAC;EAClC,CAAC;EACO,IAAMO,wBAAwB,GAAKC,iBAAiB,CAACX,kBAAkB,CAAC,CAAAY,IAA1C;EAC9B,IAAMC,qCAAqC,GAAKC,4BAA4B,CAACd,kBAAkB,CAAC,CAAAY,IAArD;EAEnD,OAAO;IACLA,IAAI,EAAE,SAAAA,CAAA;MACJF,wBAAwB,EAAE;MAC1BG,qCAAqC,EAAE;IACzC;GACD;AACH;AAEA,OAAM,SAAUF,iBAAiBA,CAACI,QAAgC;EAChE,OAAOvB,gBAAgB,CAACwB,MAAM,EAAE,SAAS,EAAE,UAACC,EAAyD;QAAvDC,EAAA,GAAAD,EAAA,CAAAE,UAAqD;MAAxCC,UAAU,GAAAF,EAAA;MAAEG,GAAG,GAAAH,EAAA;MAAEI,IAAI,GAAAJ,EAAA;MAAEK,MAAM,GAAAL,EAAA;MAAEM,QAAQ,GAAAN,EAAA;IAChG,IAAIjB,UAAU;IACd,IAAIuB,QAAQ,YAAYC,KAAK,EAAE;MAC7BxB,UAAU,GAAGP,iBAAiB,CAAC8B,QAAQ,CAAC;IAC1C,CAAC,MAAM;MACLvB,UAAU,GAAGN,mCAAmC,CAACyB,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACjF;IACAR,QAAQ,CAACd,UAAU,EAAEuB,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIJ,UAAU,CAAC;EAC9C,CAAC,CAAC;AACJ;AAEA,OAAM,SAAUN,4BAA4BA,CAACC,QAAgC;EAC3E,OAAOvB,gBAAgB,CAACwB,MAAM,EAAE,sBAAsB,EAAE,UAACC,EAAmB;QAAJS,CAAC,GAAAT,EAAA,CAAAE,UAAA;IACvE,IAAMQ,MAAM,GAAGD,CAAC,CAACC,MAAM,IAAI,cAAc;IACzC,IAAMC,KAAK,GAAGlC,iBAAiB,CAACiC,MAAM,CAAC;IACvCZ,QAAQ,CAACa,KAAK,EAAED,MAAM,CAAC;EACzB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}