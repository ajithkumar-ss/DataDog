{"ast":null,"code":"// https://github.com/jquery/jquery/blob/a684e6ba836f7c553968d7d026ed7941e1a612d8/src/selector/escapeSelector.js\nexport function cssEscape(str) {\n  if (window.CSS && window.CSS.escape) {\n    return window.CSS.escape(str);\n  }\n  // eslint-disable-next-line no-control-regex\n  return str.replace(/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g, function (ch, asCodePoint) {\n    if (asCodePoint) {\n      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n      if (ch === '\\0') {\n        return '\\uFFFD';\n      }\n      // Control characters and (dependent upon position) numbers get escaped as code points\n      return \"\".concat(ch.slice(0, -1), \"\\\\\").concat(ch.charCodeAt(ch.length - 1).toString(16), \" \");\n    }\n    // Other potentially-special ASCII characters get backslash-escaped\n    return \"\\\\\".concat(ch);\n  });\n}\nexport function elementMatches(element, selector) {\n  if (element.matches) {\n    return element.matches(selector);\n  }\n  // IE11 support\n  if (element.msMatchesSelector) {\n    return element.msMatchesSelector(selector);\n  }\n  return false;\n}\n/**\n * Return the parentElement of an node\n *\n * In cases where parentElement is not supported, such as in IE11 for SVG nodes, we fallback to parentNode\n */\nexport function getParentElement(node) {\n  if (node.parentElement) {\n    return node.parentElement;\n  }\n  while (node.parentNode) {\n    if (node.parentNode.nodeType === Node.ELEMENT_NODE) {\n      return node.parentNode;\n    }\n    node = node.parentNode;\n  }\n  return null;\n}\n// let parentNode = node.parentNode\n// while (parentNode !== null && parentNode.nodeType !== Node.ELEMENT_NODE) {\n//   parentNode = node.parentNode\n// }\n// let parentNode = document.querySelector('span').parentNode\n// while (parentNode !== null && parentNode.nodeType !== Node.ELEMENT_NODE) {\n//   parentNode = node.parentNode\n// }\n// console.log(parentNode)\n/**\n * Return the classList of an element or an array of classes if classList is not supported\n *\n * In cases where classList is not supported, such as in IE11 for SVG and MathML elements,\n * we fallback to using element.getAttribute('class').\n * We opt for element.getAttribute('class') over element.className because className returns an SVGAnimatedString for SVG elements.\n */\nexport function getClassList(element) {\n  var _a;\n  if (element.classList) {\n    return element.classList;\n  }\n  var classes = (_a = element.getAttribute('class')) === null || _a === void 0 ? void 0 : _a.trim();\n  return classes ? classes.split(/\\s+/) : [];\n}","map":{"version":3,"names":["cssEscape","str","window","CSS","escape","replace","ch","asCodePoint","concat","slice","charCodeAt","length","toString","elementMatches","element","selector","matches","msMatchesSelector","getParentElement","node","parentElement","parentNode","nodeType","Node","ELEMENT_NODE","getClassList","classList","classes","_a","getAttribute","trim","split"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-rum-core\\src\\browser\\polyfills.ts"],"sourcesContent":["// https://github.com/jquery/jquery/blob/a684e6ba836f7c553968d7d026ed7941e1a612d8/src/selector/escapeSelector.js\nexport function cssEscape(str: string) {\n  if (window.CSS && window.CSS.escape) {\n    return window.CSS.escape(str)\n  }\n\n  // eslint-disable-next-line no-control-regex\n  return str.replace(/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g, function (ch, asCodePoint) {\n    if (asCodePoint) {\n      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n      if (ch === '\\0') {\n        return '\\uFFFD'\n      }\n      // Control characters and (dependent upon position) numbers get escaped as code points\n      return `${ch.slice(0, -1)}\\\\${ch.charCodeAt(ch.length - 1).toString(16)} `\n    }\n    // Other potentially-special ASCII characters get backslash-escaped\n    return `\\\\${ch}`\n  })\n}\n\nexport function elementMatches(element: Element & { msMatchesSelector?(selector: string): boolean }, selector: string) {\n  if (element.matches) {\n    return element.matches(selector)\n  }\n  // IE11 support\n  if (element.msMatchesSelector) {\n    return element.msMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * Return the parentElement of an node\n *\n * In cases where parentElement is not supported, such as in IE11 for SVG nodes, we fallback to parentNode\n */\nexport function getParentElement(node: Node): HTMLElement | null {\n  if (node.parentElement) {\n    return node.parentElement\n  }\n\n  while (node.parentNode) {\n    if (node.parentNode.nodeType === Node.ELEMENT_NODE) {\n      return node.parentNode as HTMLElement\n    }\n    node = node.parentNode\n  }\n\n  return null\n}\n\n// let parentNode = node.parentNode\n// while (parentNode !== null && parentNode.nodeType !== Node.ELEMENT_NODE) {\n//   parentNode = node.parentNode\n// }\n\n// let parentNode = document.querySelector('span').parentNode\n// while (parentNode !== null && parentNode.nodeType !== Node.ELEMENT_NODE) {\n//   parentNode = node.parentNode\n// }\n// console.log(parentNode)\n\n/**\n * Return the classList of an element or an array of classes if classList is not supported\n *\n * In cases where classList is not supported, such as in IE11 for SVG and MathML elements,\n * we fallback to using element.getAttribute('class').\n * We opt for element.getAttribute('class') over element.className because className returns an SVGAnimatedString for SVG elements.\n */\nexport function getClassList(element: Element): DOMTokenList | string[] {\n  if (element.classList) {\n    return element.classList\n  }\n\n  const classes = element.getAttribute('class')?.trim()\n  return classes ? classes.split(/\\s+/) : []\n}\n"],"mappings":"AAAA;AACA,OAAM,SAAUA,SAASA,CAACC,GAAW;EACnC,IAAIC,MAAM,CAACC,GAAG,IAAID,MAAM,CAACC,GAAG,CAACC,MAAM,EAAE;IACnC,OAAOF,MAAM,CAACC,GAAG,CAACC,MAAM,CAACH,GAAG,CAAC;EAC/B;EAEA;EACA,OAAOA,GAAG,CAACI,OAAO,CAAC,8CAA8C,EAAE,UAAUC,EAAE,EAAEC,WAAW;IAC1F,IAAIA,WAAW,EAAE;MACf;MACA,IAAID,EAAE,KAAK,IAAI,EAAE;QACf,OAAO,QAAQ;MACjB;MACA;MACA,OAAO,GAAAE,MAAA,CAAGF,EAAE,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAAD,MAAA,CAAKF,EAAE,CAACI,UAAU,CAACJ,EAAE,CAACK,MAAM,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,MAAG;IAC5E;IACA;IACA,OAAO,KAAAJ,MAAA,CAAKF,EAAE,CAAE;EAClB,CAAC,CAAC;AACJ;AAEA,OAAM,SAAUO,cAAcA,CAACC,OAAoE,EAAEC,QAAgB;EACnH,IAAID,OAAO,CAACE,OAAO,EAAE;IACnB,OAAOF,OAAO,CAACE,OAAO,CAACD,QAAQ,CAAC;EAClC;EACA;EACA,IAAID,OAAO,CAACG,iBAAiB,EAAE;IAC7B,OAAOH,OAAO,CAACG,iBAAiB,CAACF,QAAQ,CAAC;EAC5C;EACA,OAAO,KAAK;AACd;AAEA;;;;;AAKA,OAAM,SAAUG,gBAAgBA,CAACC,IAAU;EACzC,IAAIA,IAAI,CAACC,aAAa,EAAE;IACtB,OAAOD,IAAI,CAACC,aAAa;EAC3B;EAEA,OAAOD,IAAI,CAACE,UAAU,EAAE;IACtB,IAAIF,IAAI,CAACE,UAAU,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,EAAE;MAClD,OAAOL,IAAI,CAACE,UAAyB;IACvC;IACAF,IAAI,GAAGA,IAAI,CAACE,UAAU;EACxB;EAEA,OAAO,IAAI;AACb;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA,OAAM,SAAUI,YAAYA,CAACX,OAAgB;;EAC3C,IAAIA,OAAO,CAACY,SAAS,EAAE;IACrB,OAAOZ,OAAO,CAACY,SAAS;EAC1B;EAEA,IAAMC,OAAO,GAAG,CAAAC,EAAA,GAAAd,OAAO,CAACe,YAAY,CAAC,OAAO,CAAC,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,EAAE;EACrD,OAAOH,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}