{"ast":null,"code":"import { DOM_EVENT, addEventListeners, timeStampNow } from '@datadog/browser-core';\nimport { RecordType } from '../../../types';\nexport function trackFocus(configuration, focusCb) {\n  return addEventListeners(configuration, window, [DOM_EVENT.FOCUS, DOM_EVENT.BLUR], function () {\n    focusCb({\n      data: {\n        has_focus: document.hasFocus()\n      },\n      type: RecordType.Focus,\n      timestamp: timeStampNow()\n    });\n  });\n}","map":{"version":3,"names":["DOM_EVENT","addEventListeners","timeStampNow","RecordType","trackFocus","configuration","focusCb","window","FOCUS","BLUR","data","has_focus","document","hasFocus","type","Focus","timestamp"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum\\src\\domain\\record\\trackers\\trackFocus.ts"],"sourcesContent":["import { DOM_EVENT, addEventListeners, timeStampNow } from '@datadog/browser-core'\nimport type { RumConfiguration } from '@datadog/browser-rum-core'\nimport { RecordType, type FocusRecord } from '../../../types'\nimport type { Tracker } from './types'\n\nexport type FocusCallback = (data: FocusRecord) => void\n\nexport function trackFocus(configuration: RumConfiguration, focusCb: FocusCallback): Tracker {\n  return addEventListeners(configuration, window, [DOM_EVENT.FOCUS, DOM_EVENT.BLUR], () => {\n    focusCb({\n      data: { has_focus: document.hasFocus() },\n      type: RecordType.Focus,\n      timestamp: timeStampNow(),\n    })\n  })\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,uBAAuB;AAElF,SAASC,UAAU,QAA0B,gBAAgB;AAK7D,OAAM,SAAUC,UAAUA,CAACC,aAA+B,EAAEC,OAAsB;EAChF,OAAOL,iBAAiB,CAACI,aAAa,EAAEE,MAAM,EAAE,CAACP,SAAS,CAACQ,KAAK,EAAER,SAAS,CAACS,IAAI,CAAC,EAAE;IACjFH,OAAO,CAAC;MACNI,IAAI,EAAE;QAAEC,SAAS,EAAEC,QAAQ,CAACC,QAAQ;MAAE,CAAE;MACxCC,IAAI,EAAEX,UAAU,CAACY,KAAK;MACtBC,SAAS,EAAEd,YAAY;KACxB,CAAC;EACJ,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}