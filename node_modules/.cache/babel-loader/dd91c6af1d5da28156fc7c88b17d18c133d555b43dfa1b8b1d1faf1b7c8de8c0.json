{"ast":null,"code":"import { Observable, ONE_SECOND, elapsed, relativeNow, throttle, addEventListener, DOM_EVENT, monitor } from '@datadog/browser-core';\nimport { getScrollY } from '../../../browser/scroll';\nimport { getViewportDimension } from '../../../browser/viewportObservable';\n/** Arbitrary scroll throttle duration */\nexport var THROTTLE_SCROLL_DURATION = ONE_SECOND;\nexport function trackScrollMetrics(configuration, viewStart, callback, scrollValues) {\n  if (scrollValues === void 0) {\n    scrollValues = createScrollValuesObservable(configuration);\n  }\n  var maxScrollDepth = 0;\n  var maxScrollHeight = 0;\n  var maxScrollHeightTime = 0;\n  var subscription = scrollValues.subscribe(function (_a) {\n    var scrollDepth = _a.scrollDepth,\n      scrollTop = _a.scrollTop,\n      scrollHeight = _a.scrollHeight;\n    var shouldUpdate = false;\n    if (scrollDepth > maxScrollDepth) {\n      maxScrollDepth = scrollDepth;\n      shouldUpdate = true;\n    }\n    if (scrollHeight > maxScrollHeight) {\n      maxScrollHeight = scrollHeight;\n      var now = relativeNow();\n      maxScrollHeightTime = elapsed(viewStart.relative, now);\n      shouldUpdate = true;\n    }\n    if (shouldUpdate) {\n      callback({\n        maxDepth: Math.min(maxScrollDepth, maxScrollHeight),\n        maxDepthScrollTop: scrollTop,\n        maxScrollHeight: maxScrollHeight,\n        maxScrollHeightTime: maxScrollHeightTime\n      });\n    }\n  });\n  return {\n    stop: function () {\n      return subscription.unsubscribe();\n    }\n  };\n}\nexport function computeScrollValues() {\n  var scrollTop = getScrollY();\n  var height = getViewportDimension().height;\n  var scrollHeight = Math.round((document.scrollingElement || document.documentElement).scrollHeight);\n  var scrollDepth = Math.round(height + scrollTop);\n  return {\n    scrollHeight: scrollHeight,\n    scrollDepth: scrollDepth,\n    scrollTop: scrollTop\n  };\n}\nexport function createScrollValuesObservable(configuration, throttleDuration) {\n  if (throttleDuration === void 0) {\n    throttleDuration = THROTTLE_SCROLL_DURATION;\n  }\n  return new Observable(function (observable) {\n    function notify() {\n      observable.notify(computeScrollValues());\n    }\n    if (window.ResizeObserver) {\n      var throttledNotify_1 = throttle(notify, throttleDuration, {\n        leading: false,\n        trailing: true\n      });\n      var observerTarget_1 = document.scrollingElement || document.documentElement;\n      var resizeObserver_1 = new ResizeObserver(monitor(throttledNotify_1.throttled));\n      resizeObserver_1.observe(observerTarget_1);\n      var eventListener_1 = addEventListener(configuration, window, DOM_EVENT.SCROLL, throttledNotify_1.throttled, {\n        passive: true\n      });\n      return function () {\n        throttledNotify_1.cancel();\n        resizeObserver_1.unobserve(observerTarget_1);\n        eventListener_1.stop();\n      };\n    }\n  });\n}","map":{"version":3,"names":["Observable","ONE_SECOND","elapsed","relativeNow","throttle","addEventListener","DOM_EVENT","monitor","getScrollY","getViewportDimension","THROTTLE_SCROLL_DURATION","trackScrollMetrics","configuration","viewStart","callback","scrollValues","createScrollValuesObservable","maxScrollDepth","maxScrollHeight","maxScrollHeightTime","subscription","subscribe","_a","scrollDepth","scrollTop","scrollHeight","shouldUpdate","now","relative","maxDepth","Math","min","maxDepthScrollTop","stop","unsubscribe","computeScrollValues","height","round","document","scrollingElement","documentElement","throttleDuration","observable","notify","window","ResizeObserver","throttledNotify_1","leading","trailing","observerTarget_1","resizeObserver_1","throttled","observe","eventListener_1","SCROLL","passive","cancel","unobserve"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\view\\viewMetrics\\trackScrollMetrics.ts"],"sourcesContent":["import type { ClocksState, Duration } from '@datadog/browser-core'\nimport {\n  Observable,\n  ONE_SECOND,\n  elapsed,\n  relativeNow,\n  throttle,\n  addEventListener,\n  DOM_EVENT,\n  monitor,\n} from '@datadog/browser-core'\nimport type { RumConfiguration } from '../../configuration'\nimport { getScrollY } from '../../../browser/scroll'\nimport { getViewportDimension } from '../../../browser/viewportObservable'\n\n/** Arbitrary scroll throttle duration */\nexport const THROTTLE_SCROLL_DURATION = ONE_SECOND\n\nexport interface ScrollMetrics {\n  maxDepth: number\n  maxScrollHeight: number\n  maxDepthScrollTop: number\n  maxScrollHeightTime: Duration\n}\n\nexport function trackScrollMetrics(\n  configuration: RumConfiguration,\n  viewStart: ClocksState,\n  callback: (scrollMetrics: ScrollMetrics) => void,\n  scrollValues = createScrollValuesObservable(configuration)\n) {\n  let maxScrollDepth = 0\n  let maxScrollHeight = 0\n  let maxScrollHeightTime = 0 as Duration\n\n  const subscription = scrollValues.subscribe(({ scrollDepth, scrollTop, scrollHeight }) => {\n    let shouldUpdate = false\n\n    if (scrollDepth > maxScrollDepth) {\n      maxScrollDepth = scrollDepth\n      shouldUpdate = true\n    }\n\n    if (scrollHeight > maxScrollHeight) {\n      maxScrollHeight = scrollHeight\n      const now = relativeNow()\n      maxScrollHeightTime = elapsed(viewStart.relative, now)\n      shouldUpdate = true\n    }\n\n    if (shouldUpdate) {\n      callback({\n        maxDepth: Math.min(maxScrollDepth, maxScrollHeight),\n        maxDepthScrollTop: scrollTop,\n        maxScrollHeight,\n        maxScrollHeightTime,\n      })\n    }\n  })\n\n  return {\n    stop: () => subscription.unsubscribe(),\n  }\n}\n\nexport interface ScrollValues {\n  scrollDepth: number\n  scrollTop: number\n  scrollHeight: number\n}\n\nexport function computeScrollValues() {\n  const scrollTop = getScrollY()\n\n  const { height } = getViewportDimension()\n\n  const scrollHeight = Math.round((document.scrollingElement || document.documentElement).scrollHeight)\n\n  const scrollDepth = Math.round(height + scrollTop)\n\n  return {\n    scrollHeight,\n    scrollDepth,\n    scrollTop,\n  }\n}\n\nexport function createScrollValuesObservable(\n  configuration: RumConfiguration,\n  throttleDuration = THROTTLE_SCROLL_DURATION\n): Observable<ScrollValues> {\n  return new Observable<ScrollValues>((observable) => {\n    function notify() {\n      observable.notify(computeScrollValues())\n    }\n\n    if (window.ResizeObserver) {\n      const throttledNotify = throttle(notify, throttleDuration, {\n        leading: false,\n        trailing: true,\n      })\n\n      const observerTarget = document.scrollingElement || document.documentElement\n      const resizeObserver = new ResizeObserver(monitor(throttledNotify.throttled))\n      resizeObserver.observe(observerTarget)\n      const eventListener = addEventListener(configuration, window, DOM_EVENT.SCROLL, throttledNotify.throttled, {\n        passive: true,\n      })\n\n      return () => {\n        throttledNotify.cancel()\n        resizeObserver.unobserve(observerTarget)\n        eventListener.stop()\n      }\n    }\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}