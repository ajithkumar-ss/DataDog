{"ast":null,"code":"import { DOM_EVENT, addEventListeners } from '@datadog/browser-core';\nimport { NodePrivacyLevel } from '../../../constants';\nimport { IncrementalSource, MediaInteractionType } from '../../../types';\nimport { getEventTarget } from '../eventsUtils';\nimport { getNodePrivacyLevel } from '../privacy';\nimport { getSerializedNodeId, hasSerializedNode } from '../serialization';\nimport { assembleIncrementalSnapshot } from '../assembly';\nexport function trackMediaInteraction(configuration, mediaInteractionCb) {\n  return addEventListeners(configuration, document, [DOM_EVENT.PLAY, DOM_EVENT.PAUSE], function (event) {\n    var target = getEventTarget(event);\n    if (!target || getNodePrivacyLevel(target, configuration.defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN || !hasSerializedNode(target)) {\n      return;\n    }\n    mediaInteractionCb(assembleIncrementalSnapshot(IncrementalSource.MediaInteraction, {\n      id: getSerializedNodeId(target),\n      type: event.type === DOM_EVENT.PLAY ? MediaInteractionType.Play : MediaInteractionType.Pause\n    }));\n  }, {\n    capture: true,\n    passive: true\n  });\n}","map":{"version":3,"names":["DOM_EVENT","addEventListeners","NodePrivacyLevel","IncrementalSource","MediaInteractionType","getEventTarget","getNodePrivacyLevel","getSerializedNodeId","hasSerializedNode","assembleIncrementalSnapshot","trackMediaInteraction","configuration","mediaInteractionCb","document","PLAY","PAUSE","event","target","defaultPrivacyLevel","HIDDEN","MediaInteraction","id","type","Play","Pause","capture","passive"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-rum\\src\\domain\\record\\trackers\\trackMediaInteraction.ts"],"sourcesContent":["import { DOM_EVENT, addEventListeners } from '@datadog/browser-core'\nimport type { RumConfiguration } from '@datadog/browser-rum-core'\nimport { NodePrivacyLevel } from '../../../constants'\nimport type { BrowserIncrementalSnapshotRecord, MediaInteractionData } from '../../../types'\nimport { IncrementalSource, MediaInteractionType } from '../../../types'\nimport { getEventTarget } from '../eventsUtils'\nimport { getNodePrivacyLevel } from '../privacy'\nimport { getSerializedNodeId, hasSerializedNode } from '../serialization'\nimport { assembleIncrementalSnapshot } from '../assembly'\nimport type { Tracker } from './types'\n\nexport type MediaInteractionCallback = (incrementalSnapshotRecord: BrowserIncrementalSnapshotRecord) => void\n\nexport function trackMediaInteraction(\n  configuration: RumConfiguration,\n  mediaInteractionCb: MediaInteractionCallback\n): Tracker {\n  return addEventListeners(\n    configuration,\n    document,\n    [DOM_EVENT.PLAY, DOM_EVENT.PAUSE],\n    (event) => {\n      const target = getEventTarget(event)\n      if (\n        !target ||\n        getNodePrivacyLevel(target, configuration.defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN ||\n        !hasSerializedNode(target)\n      ) {\n        return\n      }\n      mediaInteractionCb(\n        assembleIncrementalSnapshot<MediaInteractionData>(IncrementalSource.MediaInteraction, {\n          id: getSerializedNodeId(target),\n          type: event.type === DOM_EVENT.PLAY ? MediaInteractionType.Play : MediaInteractionType.Pause,\n        })\n      )\n    },\n    {\n      capture: true,\n      passive: true,\n    }\n  )\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,iBAAiB,QAAQ,uBAAuB;AAEpE,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,gBAAgB;AACxE,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,mBAAmB,QAAQ,YAAY;AAChD,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzE,SAASC,2BAA2B,QAAQ,aAAa;AAKzD,OAAM,SAAUC,qBAAqBA,CACnCC,aAA+B,EAC/BC,kBAA4C;EAE5C,OAAOX,iBAAiB,CACtBU,aAAa,EACbE,QAAQ,EACR,CAACb,SAAS,CAACc,IAAI,EAAEd,SAAS,CAACe,KAAK,CAAC,EACjC,UAACC,KAAK;IACJ,IAAMC,MAAM,GAAGZ,cAAc,CAACW,KAAK,CAAC;IACpC,IACE,CAACC,MAAM,IACPX,mBAAmB,CAACW,MAAM,EAAEN,aAAa,CAACO,mBAAmB,CAAC,KAAKhB,gBAAgB,CAACiB,MAAM,IAC1F,CAACX,iBAAiB,CAACS,MAAM,CAAC,EAC1B;MACA;IACF;IACAL,kBAAkB,CAChBH,2BAA2B,CAAuBN,iBAAiB,CAACiB,gBAAgB,EAAE;MACpFC,EAAE,EAAEd,mBAAmB,CAACU,MAAM,CAAC;MAC/BK,IAAI,EAAEN,KAAK,CAACM,IAAI,KAAKtB,SAAS,CAACc,IAAI,GAAGV,oBAAoB,CAACmB,IAAI,GAAGnB,oBAAoB,CAACoB;KACxF,CAAC,CACH;EACH,CAAC,EACD;IACEC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;GACV,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}