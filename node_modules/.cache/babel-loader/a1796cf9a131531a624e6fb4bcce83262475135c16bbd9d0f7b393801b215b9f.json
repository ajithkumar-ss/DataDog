{"ast":null,"code":"import { relativeNow } from '@datadog/browser-core';\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection';\nexport function trackNavigationTimings(lifeCycle, callback) {\n  var stop = lifeCycle.subscribe(0 /* LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED */, function (entries) {\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var entry = entries_1[_i];\n      if (entry.entryType === RumPerformanceEntryType.NAVIGATION) {\n        callback({\n          domComplete: entry.domComplete,\n          domContentLoaded: entry.domContentLoadedEventEnd,\n          domInteractive: entry.domInteractive,\n          loadEvent: entry.loadEventEnd,\n          // In some cases the value reported is negative or is larger\n          // than the current page time. Ignore these cases:\n          // https://github.com/GoogleChrome/web-vitals/issues/137\n          // https://github.com/GoogleChrome/web-vitals/issues/162\n          firstByte: entry.responseStart >= 0 && entry.responseStart <= relativeNow() ? entry.responseStart : undefined\n        });\n      }\n    }\n  }).unsubscribe;\n  return {\n    stop: stop\n  };\n}","map":{"version":3,"names":["relativeNow","RumPerformanceEntryType","trackNavigationTimings","lifeCycle","callback","stop","subscribe","entries","_i","entries_1","length","entry","entryType","NAVIGATION","domComplete","domContentLoaded","domContentLoadedEventEnd","domInteractive","loadEvent","loadEventEnd","firstByte","responseStart","undefined","unsubscribe"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\view\\viewMetrics\\trackNavigationTimings.ts"],"sourcesContent":["import type { Duration } from '@datadog/browser-core'\nimport { relativeNow } from '@datadog/browser-core'\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\n\nexport interface NavigationTimings {\n  domComplete: Duration\n  domContentLoaded: Duration\n  domInteractive: Duration\n  loadEvent: Duration\n  firstByte: Duration | undefined\n}\n\nexport function trackNavigationTimings(lifeCycle: LifeCycle, callback: (timings: NavigationTimings) => void) {\n  const { unsubscribe: stop } = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType === RumPerformanceEntryType.NAVIGATION) {\n        callback({\n          domComplete: entry.domComplete,\n          domContentLoaded: entry.domContentLoadedEventEnd,\n          domInteractive: entry.domInteractive,\n          loadEvent: entry.loadEventEnd,\n          // In some cases the value reported is negative or is larger\n          // than the current page time. Ignore these cases:\n          // https://github.com/GoogleChrome/web-vitals/issues/137\n          // https://github.com/GoogleChrome/web-vitals/issues/162\n          firstByte: entry.responseStart >= 0 && entry.responseStart <= relativeNow() ? entry.responseStart : undefined,\n        })\n      }\n    }\n  })\n\n  return { stop }\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,uBAAuB,QAAQ,wCAAwC;AAYhF,OAAM,SAAUC,sBAAsBA,CAACC,SAAoB,EAAEC,QAA8C;EACjG,IAAaC,IAAI,GAAKF,SAAS,CAACG,SAAS,2DAAmD,UAACC,OAAO;IAC1G,KAAoB,IAAAC,EAAA,IAAO,EAAPC,SAAA,GAAAF,OAAO,EAAPC,EAAA,GAAAC,SAAA,CAAAC,MAAO,EAAPF,EAAA,EAAO,EAAE;MAAxB,IAAMG,KAAK,GAAAF,SAAA,CAAAD,EAAA;MACd,IAAIG,KAAK,CAACC,SAAS,KAAKX,uBAAuB,CAACY,UAAU,EAAE;QAC1DT,QAAQ,CAAC;UACPU,WAAW,EAAEH,KAAK,CAACG,WAAW;UAC9BC,gBAAgB,EAAEJ,KAAK,CAACK,wBAAwB;UAChDC,cAAc,EAAEN,KAAK,CAACM,cAAc;UACpCC,SAAS,EAAEP,KAAK,CAACQ,YAAY;UAC7B;UACA;UACA;UACA;UACAC,SAAS,EAAET,KAAK,CAACU,aAAa,IAAI,CAAC,IAAIV,KAAK,CAACU,aAAa,IAAIrB,WAAW,EAAE,GAAGW,KAAK,CAACU,aAAa,GAAGC;SACrG,CAAC;MACJ;IACF;EACF,CAAC,CAAC,CAAAC,WAhBuB;EAkBzB,OAAO;IAAElB,IAAI,EAAAA;EAAA,CAAE;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}