{"ast":null,"code":"var Observable = /** @class */function () {\n  function Observable(onFirstSubscribe) {\n    this.onFirstSubscribe = onFirstSubscribe;\n    this.observers = [];\n  }\n  Observable.prototype.subscribe = function (f) {\n    var _this = this;\n    if (!this.observers.length && this.onFirstSubscribe) {\n      this.onLastUnsubscribe = this.onFirstSubscribe(this) || undefined;\n    }\n    this.observers.push(f);\n    return {\n      unsubscribe: function () {\n        _this.observers = _this.observers.filter(function (other) {\n          return f !== other;\n        });\n        if (!_this.observers.length && _this.onLastUnsubscribe) {\n          _this.onLastUnsubscribe();\n        }\n      }\n    };\n  };\n  Observable.prototype.notify = function (data) {\n    this.observers.forEach(function (observer) {\n      return observer(data);\n    });\n  };\n  return Observable;\n}();\nexport { Observable };\nexport function mergeObservables() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  return new Observable(function (globalObservable) {\n    var subscriptions = observables.map(function (observable) {\n      return observable.subscribe(function (data) {\n        return globalObservable.notify(data);\n      });\n    });\n    return function () {\n      return subscriptions.forEach(function (subscription) {\n        return subscription.unsubscribe();\n      });\n    };\n  });\n}","map":{"version":3,"names":["Observable","onFirstSubscribe","observers","prototype","subscribe","f","_this","length","onLastUnsubscribe","undefined","push","unsubscribe","filter","other","notify","data","forEach","observer","mergeObservables","observables","_i","arguments","globalObservable","subscriptions","map","observable","subscription"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-core\\src\\tools\\observable.ts"],"sourcesContent":["export interface Subscription {\n  unsubscribe: () => void\n}\n\nexport class Observable<T> {\n  private observers: Array<(data: T) => void> = []\n  private onLastUnsubscribe?: () => void\n\n  constructor(private onFirstSubscribe?: (observable: Observable<T>) => (() => void) | void) {}\n\n  subscribe(f: (data: T) => void): Subscription {\n    if (!this.observers.length && this.onFirstSubscribe) {\n      this.onLastUnsubscribe = this.onFirstSubscribe(this) || undefined\n    }\n    this.observers.push(f)\n    return {\n      unsubscribe: () => {\n        this.observers = this.observers.filter((other) => f !== other)\n        if (!this.observers.length && this.onLastUnsubscribe) {\n          this.onLastUnsubscribe()\n        }\n      },\n    }\n  }\n\n  notify(data: T) {\n    this.observers.forEach((observer) => observer(data))\n  }\n}\n\nexport function mergeObservables<T>(...observables: Array<Observable<T>>) {\n  return new Observable<T>((globalObservable) => {\n    const subscriptions: Subscription[] = observables.map((observable) =>\n      observable.subscribe((data) => globalObservable.notify(data))\n    )\n    return () => subscriptions.forEach((subscription) => subscription.unsubscribe())\n  })\n}\n"],"mappings":"AAIA,IAAAA,UAAA;EAIE,SAAAA,WAAoBC,gBAAqE;IAArE,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAH5B,KAAAC,SAAS,GAA6B,EAAE;EAG4C;EAE5FF,UAAA,CAAAG,SAAA,CAAAC,SAAS,GAAT,UAAUC,CAAoB;IAA9B,IAAAC,KAAA;IACE,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACK,MAAM,IAAI,IAAI,CAACN,gBAAgB,EAAE;MACnD,IAAI,CAACO,iBAAiB,GAAG,IAAI,CAACP,gBAAgB,CAAC,IAAI,CAAC,IAAIQ,SAAS;IACnE;IACA,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACL,CAAC,CAAC;IACtB,OAAO;MACLM,WAAW,EAAE,SAAAA,CAAA;QACXL,KAAI,CAACJ,SAAS,GAAGI,KAAI,CAACJ,SAAS,CAACU,MAAM,CAAC,UAACC,KAAK;UAAK,OAAAR,CAAC,KAAKQ,KAAK;QAAX,CAAW,CAAC;QAC9D,IAAI,CAACP,KAAI,CAACJ,SAAS,CAACK,MAAM,IAAID,KAAI,CAACE,iBAAiB,EAAE;UACpDF,KAAI,CAACE,iBAAiB,EAAE;QAC1B;MACF;KACD;EACH,CAAC;EAEDR,UAAA,CAAAG,SAAA,CAAAW,MAAM,GAAN,UAAOC,IAAO;IACZ,IAAI,CAACb,SAAS,CAACc,OAAO,CAAC,UAACC,QAAQ;MAAK,OAAAA,QAAQ,CAACF,IAAI,CAAC;IAAd,CAAc,CAAC;EACtD,CAAC;EACH,OAAAf,UAAC;AAAD,CAAC,CAxBD;;AA0BA,OAAM,SAAUkB,gBAAgBA,CAAA;EAAI,IAAAC,WAAA;OAAA,IAAAC,EAAA,IAAoC,EAApCA,EAAA,GAAAC,SAAA,CAAAd,MAAoC,EAApCa,EAAA,EAAoC;IAApCD,WAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAClC,OAAO,IAAIpB,UAAU,CAAI,UAACsB,gBAAgB;IACxC,IAAMC,aAAa,GAAmBJ,WAAW,CAACK,GAAG,CAAC,UAACC,UAAU;MAC/D,OAAAA,UAAU,CAACrB,SAAS,CAAC,UAACW,IAAI;QAAK,OAAAO,gBAAgB,CAACR,MAAM,CAACC,IAAI,CAAC;MAA7B,CAA6B,CAAC;IAA7D,CAA6D,CAC9D;IACD,OAAO;MAAM,OAAAQ,aAAa,CAACP,OAAO,CAAC,UAACU,YAAY;QAAK,OAAAA,YAAY,CAACf,WAAW,EAAE;MAA1B,CAA0B,CAAC;IAAnE,CAAmE;EAClF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}