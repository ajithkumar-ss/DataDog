{"ast":null,"code":"/**\n * Cross-browser stack trace computation.\n *\n * Reference implementation: https://github.com/csnover/TraceKit/blob/04530298073c3823de72deb0b97e7b38ca7bcb59/tracekit.js\n */\nimport { startsWith } from '../utils/polyfills';\nvar UNKNOWN_FUNCTION = '?';\nexport function computeStackTrace(ex) {\n  var stack = [];\n  var stackProperty = tryToGetString(ex, 'stack');\n  var exString = String(ex);\n  if (stackProperty && startsWith(stackProperty, exString)) {\n    stackProperty = stackProperty.slice(exString.length);\n  }\n  if (stackProperty) {\n    stackProperty.split('\\n').forEach(function (line) {\n      var stackFrame = parseChromeLine(line) || parseChromeAnonymousLine(line) || parseWinLine(line) || parseGeckoLine(line);\n      if (stackFrame) {\n        if (!stackFrame.func && stackFrame.line) {\n          stackFrame.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(stackFrame);\n      }\n    });\n  }\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack: stack\n  };\n}\nvar fileUrl = '((?:file|https?|blob|chrome-extension|native|eval|webpack|snippet|<anonymous>|\\\\w+\\\\.|\\\\/).*?)';\nvar filePosition = '(?::(\\\\d+))';\nvar CHROME_LINE_RE = new RegExp(\"^\\\\s*at (.*?) ?\\\\(\".concat(fileUrl).concat(filePosition, \"?\").concat(filePosition, \"?\\\\)?\\\\s*$\"), 'i');\nvar CHROME_EVAL_RE = new RegExp(\"\\\\((\\\\S*)\".concat(filePosition).concat(filePosition, \"\\\\)\"));\nfunction parseChromeLine(line) {\n  var parts = CHROME_LINE_RE.exec(line);\n  if (!parts) {\n    return;\n  }\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n  var submatch = CHROME_EVAL_RE.exec(parts[2]);\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n    parts[3] = submatch[2]; // line\n    parts[4] = submatch[3]; // column\n  }\n  return {\n    args: isNative ? [parts[2]] : [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[3] ? +parts[3] : undefined,\n    url: !isNative ? parts[2] : undefined\n  };\n}\nvar CHROME_ANONYMOUS_FUNCTION_RE = new RegExp(\"^\\\\s*at ?\".concat(fileUrl).concat(filePosition, \"?\").concat(filePosition, \"??\\\\s*$\"), 'i');\nfunction parseChromeAnonymousLine(line) {\n  var parts = CHROME_ANONYMOUS_FUNCTION_RE.exec(line);\n  if (!parts) {\n    return;\n  }\n  return {\n    args: [],\n    column: parts[3] ? +parts[3] : undefined,\n    func: UNKNOWN_FUNCTION,\n    line: parts[2] ? +parts[2] : undefined,\n    url: parts[1]\n  };\n}\nvar WINJS_LINE_RE = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseWinLine(line) {\n  var parts = WINJS_LINE_RE.exec(line);\n  if (!parts) {\n    return;\n  }\n  return {\n    args: [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: +parts[3],\n    url: parts[2]\n  };\n}\nvar GECKO_LINE_RE = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar GECKO_EVAL_RE = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nfunction parseGeckoLine(line) {\n  var parts = GECKO_LINE_RE.exec(line);\n  if (!parts) {\n    return;\n  }\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = GECKO_EVAL_RE.exec(parts[3]);\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = undefined; // no column when eval\n  }\n  return {\n    args: parts[2] ? parts[2].split(',') : [],\n    column: parts[5] ? +parts[5] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[4] ? +parts[4] : undefined,\n    url: parts[3]\n  };\n}\nfunction tryToGetString(candidate, property) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined;\n  }\n  var value = candidate[property];\n  return typeof value === 'string' ? value : undefined;\n}\nexport function computeStackTraceFromOnErrorMessage(messageObj, url, line, column) {\n  var stack = [{\n    url: url,\n    column: column,\n    line: line\n  }];\n  var _a = tryToParseMessage(messageObj),\n    name = _a.name,\n    message = _a.message;\n  return {\n    name: name,\n    message: message,\n    stack: stack\n  };\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?([\\s\\S]*)$/;\nfunction tryToParseMessage(messageObj) {\n  var _a;\n  var name;\n  var message;\n  if ({}.toString.call(messageObj) === '[object String]') {\n    ;\n    _a = ERROR_TYPES_RE.exec(messageObj), name = _a[1], message = _a[2];\n  }\n  return {\n    name: name,\n    message: message\n  };\n}","map":{"version":3,"names":["startsWith","UNKNOWN_FUNCTION","computeStackTrace","ex","stack","stackProperty","tryToGetString","exString","String","slice","length","split","forEach","line","stackFrame","parseChromeLine","parseChromeAnonymousLine","parseWinLine","parseGeckoLine","func","push","message","name","fileUrl","filePosition","CHROME_LINE_RE","RegExp","concat","CHROME_EVAL_RE","parts","exec","isNative","indexOf","isEval","submatch","args","column","undefined","url","CHROME_ANONYMOUS_FUNCTION_RE","WINJS_LINE_RE","GECKO_LINE_RE","GECKO_EVAL_RE","candidate","property","value","computeStackTraceFromOnErrorMessage","messageObj","_a","tryToParseMessage","ERROR_TYPES_RE","toString","call"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-core\\src\\tools\\stackTrace\\computeStackTrace.ts"],"sourcesContent":["/**\n * Cross-browser stack trace computation.\n *\n * Reference implementation: https://github.com/csnover/TraceKit/blob/04530298073c3823de72deb0b97e7b38ca7bcb59/tracekit.js\n */\n\nimport { startsWith } from '../utils/polyfills'\n\nexport interface StackFrame {\n  url?: string\n  func?: string\n  /** The arguments passed to the function, if known. */\n  args?: string[]\n  line?: number\n  column?: number\n  /** An array of source code lines; the middle element corresponds to the correct line. */\n  context?: string[]\n}\n\nexport interface StackTrace {\n  name?: string\n  message?: string\n  url?: string\n  stack: StackFrame[]\n  incomplete?: boolean\n  partial?: boolean\n}\n\nconst UNKNOWN_FUNCTION = '?'\n\nexport function computeStackTrace(ex: unknown): StackTrace {\n  const stack: StackFrame[] = []\n\n  let stackProperty = tryToGetString(ex, 'stack')\n  const exString = String(ex)\n  if (stackProperty && startsWith(stackProperty, exString)) {\n    stackProperty = stackProperty.slice(exString.length)\n  }\n  if (stackProperty) {\n    stackProperty.split('\\n').forEach((line) => {\n      const stackFrame =\n        parseChromeLine(line) || parseChromeAnonymousLine(line) || parseWinLine(line) || parseGeckoLine(line)\n      if (stackFrame) {\n        if (!stackFrame.func && stackFrame.line) {\n          stackFrame.func = UNKNOWN_FUNCTION\n        }\n\n        stack.push(stackFrame)\n      }\n    })\n  }\n\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack,\n  }\n}\nconst fileUrl = '((?:file|https?|blob|chrome-extension|native|eval|webpack|snippet|<anonymous>|\\\\w+\\\\.|\\\\/).*?)'\nconst filePosition = '(?::(\\\\d+))'\nconst CHROME_LINE_RE = new RegExp(`^\\\\s*at (.*?) ?\\\\(${fileUrl}${filePosition}?${filePosition}?\\\\)?\\\\s*$`, 'i')\n\nconst CHROME_EVAL_RE = new RegExp(`\\\\((\\\\S*)${filePosition}${filePosition}\\\\)`)\n\nfunction parseChromeLine(line: string): StackFrame | undefined {\n  const parts = CHROME_LINE_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  const isNative = parts[2] && parts[2].indexOf('native') === 0 // start of line\n  const isEval = parts[2] && parts[2].indexOf('eval') === 0 // start of line\n  const submatch = CHROME_EVAL_RE.exec(parts[2])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1] // url\n    parts[3] = submatch[2] // line\n    parts[4] = submatch[3] // column\n  }\n\n  return {\n    args: isNative ? [parts[2]] : [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[3] ? +parts[3] : undefined,\n    url: !isNative ? parts[2] : undefined,\n  }\n}\n\nconst CHROME_ANONYMOUS_FUNCTION_RE = new RegExp(`^\\\\s*at ?${fileUrl}${filePosition}?${filePosition}??\\\\s*$`, 'i')\n\nfunction parseChromeAnonymousLine(line: string): StackFrame | undefined {\n  const parts = CHROME_ANONYMOUS_FUNCTION_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[3] ? +parts[3] : undefined,\n    func: UNKNOWN_FUNCTION,\n    line: parts[2] ? +parts[2] : undefined,\n    url: parts[1],\n  }\n}\n\nconst WINJS_LINE_RE =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i\n\nfunction parseWinLine(line: string): StackFrame | undefined {\n  const parts = WINJS_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: +parts[3],\n    url: parts[2],\n  }\n}\n\nconst GECKO_LINE_RE =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i\nconst GECKO_EVAL_RE = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i\n\nfunction parseGeckoLine(line: string): StackFrame | undefined {\n  const parts = GECKO_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  const isEval = parts[3] && parts[3].indexOf(' > eval') > -1\n  const submatch = GECKO_EVAL_RE.exec(parts[3])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1]\n    parts[4] = submatch[2]\n    parts[5] = undefined! // no column when eval\n  }\n\n  return {\n    args: parts[2] ? parts[2].split(',') : [],\n    column: parts[5] ? +parts[5] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[4] ? +parts[4] : undefined,\n    url: parts[3],\n  }\n}\n\nfunction tryToGetString(candidate: unknown, property: string) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined\n  }\n  const value = (candidate as { [k: string]: unknown })[property]\n  return typeof value === 'string' ? value : undefined\n}\n\nexport function computeStackTraceFromOnErrorMessage(messageObj: unknown, url?: string, line?: number, column?: number) {\n  const stack = [{ url, column, line }]\n  const { name, message } = tryToParseMessage(messageObj)\n  return {\n    name,\n    message,\n    stack,\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nconst ERROR_TYPES_RE =\n  /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?([\\s\\S]*)$/\n\nfunction tryToParseMessage(messageObj: unknown) {\n  let name\n  let message\n  if ({}.toString.call(messageObj) === '[object String]') {\n    ;[, name, message] = ERROR_TYPES_RE.exec(messageObj as string)!\n  }\n  return { name, message }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}