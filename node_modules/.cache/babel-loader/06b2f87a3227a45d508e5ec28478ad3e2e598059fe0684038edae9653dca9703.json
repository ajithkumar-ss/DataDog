{"ast":null,"code":"export function isTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE;\n}\nexport function isCommentNode(node) {\n  return node.nodeType === Node.COMMENT_NODE;\n}\nexport function isElementNode(node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\nexport function isNodeShadowHost(node) {\n  return isElementNode(node) && Boolean(node.shadowRoot);\n}\nexport function isNodeShadowRoot(node) {\n  var shadowRoot = node;\n  return !!shadowRoot.host && shadowRoot.nodeType === Node.DOCUMENT_FRAGMENT_NODE && isElementNode(shadowRoot.host);\n}\nexport function hasChildNodes(node) {\n  return node.childNodes.length > 0 || isNodeShadowHost(node);\n}\nexport function forEachChildNodes(node, callback) {\n  var child = node.firstChild;\n  while (child) {\n    callback(child);\n    child = child.nextSibling;\n  }\n  if (isNodeShadowHost(node)) {\n    callback(node.shadowRoot);\n  }\n}\n/**\n * Return `host` in case if the current node is a shadow root otherwise will return the `parentNode`\n */\nexport function getParentNode(node) {\n  return isNodeShadowRoot(node) ? node.host : node.parentNode;\n}","map":{"version":3,"names":["isTextNode","node","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","isElementNode","ELEMENT_NODE","isNodeShadowHost","Boolean","shadowRoot","isNodeShadowRoot","host","DOCUMENT_FRAGMENT_NODE","hasChildNodes","childNodes","length","forEachChildNodes","callback","child","firstChild","nextSibling","getParentNode","parentNode"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-rum-core\\src\\browser\\htmlDomUtils.ts"],"sourcesContent":["export function isTextNode(node: Node): node is Text {\n  return node.nodeType === Node.TEXT_NODE\n}\n\nexport function isCommentNode(node: Node): node is Comment {\n  return node.nodeType === Node.COMMENT_NODE\n}\n\nexport function isElementNode(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE\n}\n\nexport function isNodeShadowHost(node: Node): node is Element & { shadowRoot: ShadowRoot } {\n  return isElementNode(node) && Boolean(node.shadowRoot)\n}\n\nexport function isNodeShadowRoot(node: Node): node is ShadowRoot {\n  const shadowRoot = node as ShadowRoot\n  return !!shadowRoot.host && shadowRoot.nodeType === Node.DOCUMENT_FRAGMENT_NODE && isElementNode(shadowRoot.host)\n}\n\nexport function hasChildNodes(node: Node) {\n  return node.childNodes.length > 0 || isNodeShadowHost(node)\n}\n\nexport function forEachChildNodes(node: Node, callback: (child: Node) => void) {\n  let child = node.firstChild\n\n  while (child) {\n    callback(child)\n\n    child = child.nextSibling\n  }\n\n  if (isNodeShadowHost(node)) {\n    callback(node.shadowRoot)\n  }\n}\n\n/**\n * Return `host` in case if the current node is a shadow root otherwise will return the `parentNode`\n */\nexport function getParentNode(node: Node): Node | null {\n  return isNodeShadowRoot(node) ? node.host : node.parentNode\n}\n"],"mappings":"AAAA,OAAM,SAAUA,UAAUA,CAACC,IAAU;EACnC,OAAOA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,SAAS;AACzC;AAEA,OAAM,SAAUC,aAAaA,CAACJ,IAAU;EACtC,OAAOA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACG,YAAY;AAC5C;AAEA,OAAM,SAAUC,aAAaA,CAACN,IAAU;EACtC,OAAOA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACK,YAAY;AAC5C;AAEA,OAAM,SAAUC,gBAAgBA,CAACR,IAAU;EACzC,OAAOM,aAAa,CAACN,IAAI,CAAC,IAAIS,OAAO,CAACT,IAAI,CAACU,UAAU,CAAC;AACxD;AAEA,OAAM,SAAUC,gBAAgBA,CAACX,IAAU;EACzC,IAAMU,UAAU,GAAGV,IAAkB;EACrC,OAAO,CAAC,CAACU,UAAU,CAACE,IAAI,IAAIF,UAAU,CAACT,QAAQ,KAAKC,IAAI,CAACW,sBAAsB,IAAIP,aAAa,CAACI,UAAU,CAACE,IAAI,CAAC;AACnH;AAEA,OAAM,SAAUE,aAAaA,CAACd,IAAU;EACtC,OAAOA,IAAI,CAACe,UAAU,CAACC,MAAM,GAAG,CAAC,IAAIR,gBAAgB,CAACR,IAAI,CAAC;AAC7D;AAEA,OAAM,SAAUiB,iBAAiBA,CAACjB,IAAU,EAAEkB,QAA+B;EAC3E,IAAIC,KAAK,GAAGnB,IAAI,CAACoB,UAAU;EAE3B,OAAOD,KAAK,EAAE;IACZD,QAAQ,CAACC,KAAK,CAAC;IAEfA,KAAK,GAAGA,KAAK,CAACE,WAAW;EAC3B;EAEA,IAAIb,gBAAgB,CAACR,IAAI,CAAC,EAAE;IAC1BkB,QAAQ,CAAClB,IAAI,CAACU,UAAU,CAAC;EAC3B;AACF;AAEA;;;AAGA,OAAM,SAAUY,aAAaA,CAACtB,IAAU;EACtC,OAAOW,gBAAgB,CAACX,IAAI,CAAC,GAAGA,IAAI,CAACY,IAAI,GAAGZ,IAAI,CAACuB,UAAU;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}