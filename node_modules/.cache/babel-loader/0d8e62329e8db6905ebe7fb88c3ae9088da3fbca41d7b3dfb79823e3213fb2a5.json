{"ast":null,"code":"export var MAX_STATS_HISTORY = 10;\nvar statsPerView;\nexport function getSegmentsCount(viewId) {\n  return getOrCreateReplayStats(viewId).segments_count;\n}\nexport function addSegment(viewId) {\n  getOrCreateReplayStats(viewId).segments_count += 1;\n}\nexport function addRecord(viewId) {\n  getOrCreateReplayStats(viewId).records_count += 1;\n}\nexport function addWroteData(viewId, additionalBytesCount) {\n  getOrCreateReplayStats(viewId).segments_total_raw_size += additionalBytesCount;\n}\nexport function getReplayStats(viewId) {\n  return statsPerView === null || statsPerView === void 0 ? void 0 : statsPerView.get(viewId);\n}\nexport function resetReplayStats() {\n  statsPerView = undefined;\n}\nfunction getOrCreateReplayStats(viewId) {\n  if (!statsPerView) {\n    statsPerView = new Map();\n  }\n  var replayStats;\n  if (statsPerView.has(viewId)) {\n    replayStats = statsPerView.get(viewId);\n  } else {\n    replayStats = {\n      records_count: 0,\n      segments_count: 0,\n      segments_total_raw_size: 0\n    };\n    statsPerView.set(viewId, replayStats);\n    if (statsPerView.size > MAX_STATS_HISTORY) {\n      deleteOldestStats();\n    }\n  }\n  return replayStats;\n}\nfunction deleteOldestStats() {\n  if (!statsPerView) {\n    return;\n  }\n  if (statsPerView.keys) {\n    statsPerView.delete(statsPerView.keys().next().value);\n  } else {\n    // IE11 doesn't support map.keys\n    var isFirst_1 = true;\n    statsPerView.forEach(function (_value, key) {\n      if (isFirst_1) {\n        statsPerView.delete(key);\n        isFirst_1 = false;\n      }\n    });\n  }\n}","map":{"version":3,"names":["MAX_STATS_HISTORY","statsPerView","getSegmentsCount","viewId","getOrCreateReplayStats","segments_count","addSegment","addRecord","records_count","addWroteData","additionalBytesCount","segments_total_raw_size","getReplayStats","get","resetReplayStats","undefined","Map","replayStats","has","set","size","deleteOldestStats","keys","delete","next","value","isFirst_1","forEach","_value","key"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum\\src\\domain\\replayStats.ts"],"sourcesContent":["import type { ReplayStats } from '@datadog/browser-rum-core'\n\nexport const MAX_STATS_HISTORY = 10\nlet statsPerView: Map<string, ReplayStats> | undefined\n\nexport function getSegmentsCount(viewId: string) {\n  return getOrCreateReplayStats(viewId).segments_count\n}\n\nexport function addSegment(viewId: string) {\n  getOrCreateReplayStats(viewId).segments_count += 1\n}\n\nexport function addRecord(viewId: string) {\n  getOrCreateReplayStats(viewId).records_count += 1\n}\n\nexport function addWroteData(viewId: string, additionalBytesCount: number) {\n  getOrCreateReplayStats(viewId).segments_total_raw_size += additionalBytesCount\n}\n\nexport function getReplayStats(viewId: string) {\n  return statsPerView?.get(viewId)\n}\n\nexport function resetReplayStats() {\n  statsPerView = undefined\n}\n\nfunction getOrCreateReplayStats(viewId: string) {\n  if (!statsPerView) {\n    statsPerView = new Map()\n  }\n\n  let replayStats: ReplayStats\n  if (statsPerView.has(viewId)) {\n    replayStats = statsPerView.get(viewId)!\n  } else {\n    replayStats = {\n      records_count: 0,\n      segments_count: 0,\n      segments_total_raw_size: 0,\n    }\n    statsPerView.set(viewId, replayStats)\n    if (statsPerView.size > MAX_STATS_HISTORY) {\n      deleteOldestStats()\n    }\n  }\n\n  return replayStats\n}\n\nfunction deleteOldestStats() {\n  if (!statsPerView) {\n    return\n  }\n  if (statsPerView.keys) {\n    statsPerView.delete(statsPerView.keys().next().value)\n  } else {\n    // IE11 doesn't support map.keys\n    let isFirst = true\n    statsPerView.forEach((_value, key) => {\n      if (isFirst) {\n        statsPerView!.delete(key)\n        isFirst = false\n      }\n    })\n  }\n}\n"],"mappings":"AAEA,OAAO,IAAMA,iBAAiB,GAAG,EAAE;AACnC,IAAIC,YAAkD;AAEtD,OAAM,SAAUC,gBAAgBA,CAACC,MAAc;EAC7C,OAAOC,sBAAsB,CAACD,MAAM,CAAC,CAACE,cAAc;AACtD;AAEA,OAAM,SAAUC,UAAUA,CAACH,MAAc;EACvCC,sBAAsB,CAACD,MAAM,CAAC,CAACE,cAAc,IAAI,CAAC;AACpD;AAEA,OAAM,SAAUE,SAASA,CAACJ,MAAc;EACtCC,sBAAsB,CAACD,MAAM,CAAC,CAACK,aAAa,IAAI,CAAC;AACnD;AAEA,OAAM,SAAUC,YAAYA,CAACN,MAAc,EAAEO,oBAA4B;EACvEN,sBAAsB,CAACD,MAAM,CAAC,CAACQ,uBAAuB,IAAID,oBAAoB;AAChF;AAEA,OAAM,SAAUE,cAAcA,CAACT,MAAc;EAC3C,OAAOF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEY,GAAG,CAACV,MAAM,CAAC;AAClC;AAEA,OAAM,SAAUW,gBAAgBA,CAAA;EAC9Bb,YAAY,GAAGc,SAAS;AAC1B;AAEA,SAASX,sBAAsBA,CAACD,MAAc;EAC5C,IAAI,CAACF,YAAY,EAAE;IACjBA,YAAY,GAAG,IAAIe,GAAG,EAAE;EAC1B;EAEA,IAAIC,WAAwB;EAC5B,IAAIhB,YAAY,CAACiB,GAAG,CAACf,MAAM,CAAC,EAAE;IAC5Bc,WAAW,GAAGhB,YAAY,CAACY,GAAG,CAACV,MAAM,CAAE;EACzC,CAAC,MAAM;IACLc,WAAW,GAAG;MACZT,aAAa,EAAE,CAAC;MAChBH,cAAc,EAAE,CAAC;MACjBM,uBAAuB,EAAE;KAC1B;IACDV,YAAY,CAACkB,GAAG,CAAChB,MAAM,EAAEc,WAAW,CAAC;IACrC,IAAIhB,YAAY,CAACmB,IAAI,GAAGpB,iBAAiB,EAAE;MACzCqB,iBAAiB,EAAE;IACrB;EACF;EAEA,OAAOJ,WAAW;AACpB;AAEA,SAASI,iBAAiBA,CAAA;EACxB,IAAI,CAACpB,YAAY,EAAE;IACjB;EACF;EACA,IAAIA,YAAY,CAACqB,IAAI,EAAE;IACrBrB,YAAY,CAACsB,MAAM,CAACtB,YAAY,CAACqB,IAAI,EAAE,CAACE,IAAI,EAAE,CAACC,KAAK,CAAC;EACvD,CAAC,MAAM;IACL;IACA,IAAIC,SAAO,GAAG,IAAI;IAClBzB,YAAY,CAAC0B,OAAO,CAAC,UAACC,MAAM,EAAEC,GAAG;MAC/B,IAAIH,SAAO,EAAE;QACXzB,YAAa,CAACsB,MAAM,CAACM,GAAG,CAAC;QACzBH,SAAO,GAAG,KAAK;MACjB;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}