{"ast":null,"code":"import { ONE_MINUTE, find } from '@datadog/browser-core';\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection';\n// Discard FCP timings above a certain delay to avoid incorrect data\n// It happens in some cases like sleep mode or some browser implementations\nexport var FCP_MAXIMUM_DELAY = 10 * ONE_MINUTE;\nexport function trackFirstContentfulPaint(lifeCycle, firstHidden, callback) {\n  var unsubscribeLifeCycle = lifeCycle.subscribe(0 /* LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED */, function (entries) {\n    var fcpEntry = find(entries, function (entry) {\n      return entry.entryType === RumPerformanceEntryType.PAINT && entry.name === 'first-contentful-paint' && entry.startTime < firstHidden.timeStamp && entry.startTime < FCP_MAXIMUM_DELAY;\n    });\n    if (fcpEntry) {\n      callback(fcpEntry.startTime);\n    }\n  }).unsubscribe;\n  return {\n    stop: unsubscribeLifeCycle\n  };\n}","map":{"version":3,"names":["ONE_MINUTE","find","RumPerformanceEntryType","FCP_MAXIMUM_DELAY","trackFirstContentfulPaint","lifeCycle","firstHidden","callback","unsubscribeLifeCycle","subscribe","entries","fcpEntry","entry","entryType","PAINT","name","startTime","timeStamp","unsubscribe","stop"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\view\\viewMetrics\\trackFirstContentfulPaint.ts"],"sourcesContent":["import type { RelativeTime } from '@datadog/browser-core'\nimport { ONE_MINUTE, find } from '@datadog/browser-core'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { RumPerformancePaintTiming } from '../../../browser/performanceCollection'\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection'\nimport type { FirstHidden } from './trackFirstHidden'\n\n// Discard FCP timings above a certain delay to avoid incorrect data\n// It happens in some cases like sleep mode or some browser implementations\nexport const FCP_MAXIMUM_DELAY = 10 * ONE_MINUTE\n\nexport function trackFirstContentfulPaint(\n  lifeCycle: LifeCycle,\n  firstHidden: FirstHidden,\n  callback: (fcpTiming: RelativeTime) => void\n) {\n  const { unsubscribe: unsubscribeLifeCycle } = lifeCycle.subscribe(\n    LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED,\n    (entries) => {\n      const fcpEntry = find(\n        entries,\n        (entry): entry is RumPerformancePaintTiming =>\n          entry.entryType === RumPerformanceEntryType.PAINT &&\n          entry.name === 'first-contentful-paint' &&\n          entry.startTime < firstHidden.timeStamp &&\n          entry.startTime < FCP_MAXIMUM_DELAY\n      )\n      if (fcpEntry) {\n        callback(fcpEntry.startTime)\n      }\n    }\n  )\n  return {\n    stop: unsubscribeLifeCycle,\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,IAAI,QAAQ,uBAAuB;AAIxD,SAASC,uBAAuB,QAAQ,wCAAwC;AAGhF;AACA;AACA,OAAO,IAAMC,iBAAiB,GAAG,EAAE,GAAGH,UAAU;AAEhD,OAAM,SAAUI,yBAAyBA,CACvCC,SAAoB,EACpBC,WAAwB,EACxBC,QAA2C;EAEnC,IAAaC,oBAAoB,GAAKH,SAAS,CAACI,SAAS,2DAE/D,UAACC,OAAO;IACN,IAAMC,QAAQ,GAAGV,IAAI,CACnBS,OAAO,EACP,UAACE,KAAK;MACJ,OAAAA,KAAK,CAACC,SAAS,KAAKX,uBAAuB,CAACY,KAAK,IACjDF,KAAK,CAACG,IAAI,KAAK,wBAAwB,IACvCH,KAAK,CAACI,SAAS,GAAGV,WAAW,CAACW,SAAS,IACvCL,KAAK,CAACI,SAAS,GAAGb,iBAAiB;IAHnC,CAGmC,CACtC;IACD,IAAIQ,QAAQ,EAAE;MACZJ,QAAQ,CAACI,QAAQ,CAACK,SAAS,CAAC;IAC9B;EACF,CAAC,CACF,CAAAE,WAfwC;EAgBzC,OAAO;IACLC,IAAI,EAAEX;GACP;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}