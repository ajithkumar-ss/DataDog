{"ast":null,"code":"import { jsonStringify } from '../serialisation/jsonStringify';\nexport function normalizeUrl(url) {\n  return buildUrl(url, location.href).href;\n}\nexport function isValidUrl(url) {\n  try {\n    return !!buildUrl(url);\n  } catch (_a) {\n    return false;\n  }\n}\nexport function getPathName(url) {\n  var pathname = buildUrl(url).pathname;\n  return pathname[0] === '/' ? pathname : \"/\".concat(pathname);\n}\nexport function buildUrl(url, base) {\n  var supportedURL = getSupportedUrl();\n  if (supportedURL) {\n    try {\n      return base !== undefined ? new supportedURL(url, base) : new supportedURL(url);\n    } catch (error) {\n      throw new Error(\"Failed to construct URL: \".concat(String(error), \" \").concat(jsonStringify({\n        url: url,\n        base: base\n      })));\n    }\n  }\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(\"Invalid URL: '\".concat(url, \"'\"));\n  }\n  var doc = document;\n  var anchorElement = doc.createElement('a');\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('');\n    var baseElement = doc.createElement('base');\n    baseElement.href = base;\n    doc.head.appendChild(baseElement);\n    doc.body.appendChild(anchorElement);\n  }\n  anchorElement.href = url;\n  return anchorElement;\n}\nvar originalURL = URL;\nvar isURLSupported;\nfunction getSupportedUrl() {\n  if (isURLSupported === undefined) {\n    try {\n      var url = new originalURL('http://test/path');\n      isURLSupported = url.href === 'http://test/path';\n    } catch (_a) {\n      isURLSupported = false;\n    }\n  }\n  return isURLSupported ? originalURL : undefined;\n}","map":{"version":3,"names":["jsonStringify","normalizeUrl","url","buildUrl","location","href","isValidUrl","_a","getPathName","pathname","concat","base","supportedURL","getSupportedUrl","undefined","error","Error","String","test","doc","document","anchorElement","createElement","implementation","createHTMLDocument","baseElement","head","appendChild","body","originalURL","URL","isURLSupported"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-core\\src\\tools\\utils\\urlPolyfill.ts"],"sourcesContent":["import { jsonStringify } from '../serialisation/jsonStringify'\n\nexport function normalizeUrl(url: string) {\n  return buildUrl(url, location.href).href\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    return !!buildUrl(url)\n  } catch {\n    return false\n  }\n}\n\nexport function getPathName(url: string) {\n  const pathname = buildUrl(url).pathname\n  return pathname[0] === '/' ? pathname : `/${pathname}`\n}\n\nexport function buildUrl(url: string, base?: string) {\n  const supportedURL = getSupportedUrl()\n  if (supportedURL) {\n    try {\n      return base !== undefined ? new supportedURL(url, base) : new supportedURL(url)\n    } catch (error) {\n      throw new Error(`Failed to construct URL: ${String(error)} ${jsonStringify({ url, base })!}`)\n    }\n  }\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(`Invalid URL: '${url}'`)\n  }\n  let doc = document\n  const anchorElement = doc.createElement('a')\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('')\n    const baseElement = doc.createElement('base')\n    baseElement.href = base\n    doc.head.appendChild(baseElement)\n    doc.body.appendChild(anchorElement)\n  }\n  anchorElement.href = url\n  return anchorElement\n}\n\nconst originalURL = URL\nlet isURLSupported: boolean | undefined\nfunction getSupportedUrl(): typeof URL | undefined {\n  if (isURLSupported === undefined) {\n    try {\n      const url = new originalURL('http://test/path')\n      isURLSupported = url.href === 'http://test/path'\n    } catch {\n      isURLSupported = false\n    }\n  }\n  return isURLSupported ? originalURL : undefined\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,gCAAgC;AAE9D,OAAM,SAAUC,YAAYA,CAACC,GAAW;EACtC,OAAOC,QAAQ,CAACD,GAAG,EAAEE,QAAQ,CAACC,IAAI,CAAC,CAACA,IAAI;AAC1C;AAEA,OAAM,SAAUC,UAAUA,CAACJ,GAAW;EACpC,IAAI;IACF,OAAO,CAAC,CAACC,QAAQ,CAACD,GAAG,CAAC;EACxB,CAAC,CAAC,OAAAK,EAAA,EAAM;IACN,OAAO,KAAK;EACd;AACF;AAEA,OAAM,SAAUC,WAAWA,CAACN,GAAW;EACrC,IAAMO,QAAQ,GAAGN,QAAQ,CAACD,GAAG,CAAC,CAACO,QAAQ;EACvC,OAAOA,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,QAAQ,GAAG,IAAAC,MAAA,CAAID,QAAQ,CAAE;AACxD;AAEA,OAAM,SAAUN,QAAQA,CAACD,GAAW,EAAES,IAAa;EACjD,IAAMC,YAAY,GAAGC,eAAe,EAAE;EACtC,IAAID,YAAY,EAAE;IAChB,IAAI;MACF,OAAOD,IAAI,KAAKG,SAAS,GAAG,IAAIF,YAAY,CAACV,GAAG,EAAES,IAAI,CAAC,GAAG,IAAIC,YAAY,CAACV,GAAG,CAAC;IACjF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,4BAAAN,MAAA,CAA4BO,MAAM,CAACF,KAAK,CAAC,OAAAL,MAAA,CAAIV,aAAa,CAAC;QAAEE,GAAG,EAAAA,GAAA;QAAES,IAAI,EAAAA;MAAA,CAAE,CAAE,CAAE,CAAC;IAC/F;EACF;EACA,IAAIA,IAAI,KAAKG,SAAS,IAAI,CAAC,GAAG,CAACI,IAAI,CAAChB,GAAG,CAAC,EAAE;IACxC,MAAM,IAAIc,KAAK,CAAC,iBAAAN,MAAA,CAAiBR,GAAG,MAAG,CAAC;EAC1C;EACA,IAAIiB,GAAG,GAAGC,QAAQ;EAClB,IAAMC,aAAa,GAAGF,GAAG,CAACG,aAAa,CAAC,GAAG,CAAC;EAC5C,IAAIX,IAAI,KAAKG,SAAS,EAAE;IACtBK,GAAG,GAAGC,QAAQ,CAACG,cAAc,CAACC,kBAAkB,CAAC,EAAE,CAAC;IACpD,IAAMC,WAAW,GAAGN,GAAG,CAACG,aAAa,CAAC,MAAM,CAAC;IAC7CG,WAAW,CAACpB,IAAI,GAAGM,IAAI;IACvBQ,GAAG,CAACO,IAAI,CAACC,WAAW,CAACF,WAAW,CAAC;IACjCN,GAAG,CAACS,IAAI,CAACD,WAAW,CAACN,aAAa,CAAC;EACrC;EACAA,aAAa,CAAChB,IAAI,GAAGH,GAAG;EACxB,OAAOmB,aAAa;AACtB;AAEA,IAAMQ,WAAW,GAAGC,GAAG;AACvB,IAAIC,cAAmC;AACvC,SAASlB,eAAeA,CAAA;EACtB,IAAIkB,cAAc,KAAKjB,SAAS,EAAE;IAChC,IAAI;MACF,IAAMZ,GAAG,GAAG,IAAI2B,WAAW,CAAC,kBAAkB,CAAC;MAC/CE,cAAc,GAAG7B,GAAG,CAACG,IAAI,KAAK,kBAAkB;IAClD,CAAC,CAAC,OAAAE,EAAA,EAAM;MACNwB,cAAc,GAAG,KAAK;IACxB;EACF;EACA,OAAOA,cAAc,GAAGF,WAAW,GAAGf,SAAS;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}