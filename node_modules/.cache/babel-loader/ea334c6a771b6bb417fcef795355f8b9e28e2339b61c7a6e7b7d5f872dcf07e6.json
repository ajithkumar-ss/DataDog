{"ast":null,"code":"import { elapsed, find } from '@datadog/browser-core';\nimport { isElementNode } from '../../../browser/htmlDomUtils';\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection';\nimport { getSelectorFromElement } from '../../getSelectorFromElement';\n/**\n * Track the first input occurring during the initial View to return:\n * - First Input Delay\n * - First Input Time\n * Callback is called at most one time.\n * Documentation: https://web.dev/fid/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getFID.ts\n */\nexport function trackFirstInput(lifeCycle, configuration, firstHidden, callback) {\n  var unsubscribeLifeCycle = lifeCycle.subscribe(0 /* LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED */, function (entries) {\n    var firstInputEntry = find(entries, function (entry) {\n      return entry.entryType === RumPerformanceEntryType.FIRST_INPUT && entry.startTime < firstHidden.timeStamp;\n    });\n    if (firstInputEntry) {\n      var firstInputDelay = elapsed(firstInputEntry.startTime, firstInputEntry.processingStart);\n      var firstInputTargetSelector = void 0;\n      if (firstInputEntry.target && isElementNode(firstInputEntry.target)) {\n        firstInputTargetSelector = getSelectorFromElement(firstInputEntry.target, configuration.actionNameAttribute);\n      }\n      callback({\n        // Ensure firstInputDelay to be positive, see\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1185815\n        delay: firstInputDelay >= 0 ? firstInputDelay : 0,\n        time: firstInputEntry.startTime,\n        targetSelector: firstInputTargetSelector\n      });\n    }\n  }).unsubscribe;\n  return {\n    stop: unsubscribeLifeCycle\n  };\n}","map":{"version":3,"names":["elapsed","find","isElementNode","RumPerformanceEntryType","getSelectorFromElement","trackFirstInput","lifeCycle","configuration","firstHidden","callback","unsubscribeLifeCycle","subscribe","entries","firstInputEntry","entry","entryType","FIRST_INPUT","startTime","timeStamp","firstInputDelay","processingStart","firstInputTargetSelector","target","actionNameAttribute","delay","time","targetSelector","unsubscribe","stop"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\view\\viewMetrics\\trackFirstInput.ts"],"sourcesContent":["import type { Duration, RelativeTime } from '@datadog/browser-core'\nimport { elapsed, find } from '@datadog/browser-core'\nimport { isElementNode } from '../../../browser/htmlDomUtils'\nimport type { RumConfiguration } from '../../configuration'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport { RumPerformanceEntryType } from '../../../browser/performanceCollection'\nimport type { RumFirstInputTiming } from '../../../browser/performanceCollection'\nimport { getSelectorFromElement } from '../../getSelectorFromElement'\nimport type { FirstHidden } from './trackFirstHidden'\n\nexport interface FirstInput {\n  delay: Duration\n  time: RelativeTime\n  targetSelector?: string\n}\n\n/**\n * Track the first input occurring during the initial View to return:\n * - First Input Delay\n * - First Input Time\n * Callback is called at most one time.\n * Documentation: https://web.dev/fid/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getFID.ts\n */\nexport function trackFirstInput(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  firstHidden: FirstHidden,\n  callback: (firstInput: FirstInput) => void\n) {\n  const { unsubscribe: unsubscribeLifeCycle } = lifeCycle.subscribe(\n    LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED,\n    (entries) => {\n      const firstInputEntry = find(\n        entries,\n        (entry): entry is RumFirstInputTiming =>\n          entry.entryType === RumPerformanceEntryType.FIRST_INPUT && entry.startTime < firstHidden.timeStamp\n      )\n      if (firstInputEntry) {\n        const firstInputDelay = elapsed(firstInputEntry.startTime, firstInputEntry.processingStart)\n        let firstInputTargetSelector\n\n        if (firstInputEntry.target && isElementNode(firstInputEntry.target)) {\n          firstInputTargetSelector = getSelectorFromElement(firstInputEntry.target, configuration.actionNameAttribute)\n        }\n\n        callback({\n          // Ensure firstInputDelay to be positive, see\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1185815\n          delay: firstInputDelay >= 0 ? firstInputDelay : (0 as Duration),\n          time: firstInputEntry.startTime,\n          targetSelector: firstInputTargetSelector,\n        })\n      }\n    }\n  )\n\n  return {\n    stop: unsubscribeLifeCycle,\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,EAAEC,IAAI,QAAQ,uBAAuB;AACrD,SAASC,aAAa,QAAQ,+BAA+B;AAI7D,SAASC,uBAAuB,QAAQ,wCAAwC;AAEhF,SAASC,sBAAsB,QAAQ,8BAA8B;AASrE;;;;;;;;AAQA,OAAM,SAAUC,eAAeA,CAC7BC,SAAoB,EACpBC,aAA+B,EAC/BC,WAAwB,EACxBC,QAA0C;EAElC,IAAaC,oBAAoB,GAAKJ,SAAS,CAACK,SAAS,2DAE/D,UAACC,OAAO;IACN,IAAMC,eAAe,GAAGZ,IAAI,CAC1BW,OAAO,EACP,UAACE,KAAK;MACJ,OAAAA,KAAK,CAACC,SAAS,KAAKZ,uBAAuB,CAACa,WAAW,IAAIF,KAAK,CAACG,SAAS,GAAGT,WAAW,CAACU,SAAS;IAAlG,CAAkG,CACrG;IACD,IAAIL,eAAe,EAAE;MACnB,IAAMM,eAAe,GAAGnB,OAAO,CAACa,eAAe,CAACI,SAAS,EAAEJ,eAAe,CAACO,eAAe,CAAC;MAC3F,IAAIC,wBAAwB;MAE5B,IAAIR,eAAe,CAACS,MAAM,IAAIpB,aAAa,CAACW,eAAe,CAACS,MAAM,CAAC,EAAE;QACnED,wBAAwB,GAAGjB,sBAAsB,CAACS,eAAe,CAACS,MAAM,EAAEf,aAAa,CAACgB,mBAAmB,CAAC;MAC9G;MAEAd,QAAQ,CAAC;QACP;QACA;QACAe,KAAK,EAAEL,eAAe,IAAI,CAAC,GAAGA,eAAe,GAAI,CAAc;QAC/DM,IAAI,EAAEZ,eAAe,CAACI,SAAS;QAC/BS,cAAc,EAAEL;OACjB,CAAC;IACJ;EACF,CAAC,CACF,CAAAM,WAzBwC;EA2BzC,OAAO;IACLC,IAAI,EAAElB;GACP;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}