{"ast":null,"code":"import { getViewportDimension, initViewportObservable } from '../../browser/viewportObservable';\nexport function startDisplayContext(configuration) {\n  var viewport = getViewportDimension();\n  var unsubscribeViewport = initViewportObservable(configuration).subscribe(function (viewportDimension) {\n    viewport = viewportDimension;\n  }).unsubscribe;\n  return {\n    get: function () {\n      return {\n        viewport: viewport\n      };\n    },\n    stop: unsubscribeViewport\n  };\n}","map":{"version":3,"names":["getViewportDimension","initViewportObservable","startDisplayContext","configuration","viewport","unsubscribeViewport","subscribe","viewportDimension","unsubscribe","get","stop"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\contexts\\displayContext.ts"],"sourcesContent":["import type { RumConfiguration } from '../configuration'\nimport { getViewportDimension, initViewportObservable } from '../../browser/viewportObservable'\n\nexport type DisplayContext = ReturnType<typeof startDisplayContext>\n\nexport function startDisplayContext(configuration: RumConfiguration) {\n  let viewport = getViewportDimension()\n  const unsubscribeViewport = initViewportObservable(configuration).subscribe((viewportDimension) => {\n    viewport = viewportDimension\n  }).unsubscribe\n\n  return {\n    get: () => ({ viewport }),\n    stop: unsubscribeViewport,\n  }\n}\n"],"mappings":"AACA,SAASA,oBAAoB,EAAEC,sBAAsB,QAAQ,kCAAkC;AAI/F,OAAM,SAAUC,mBAAmBA,CAACC,aAA+B;EACjE,IAAIC,QAAQ,GAAGJ,oBAAoB,EAAE;EACrC,IAAMK,mBAAmB,GAAGJ,sBAAsB,CAACE,aAAa,CAAC,CAACG,SAAS,CAAC,UAACC,iBAAiB;IAC5FH,QAAQ,GAAGG,iBAAiB;EAC9B,CAAC,CAAC,CAACC,WAAW;EAEd,OAAO;IACLC,GAAG,EAAE,SAAAA,CAAA;MAAM,OAAC;QAAEL,QAAQ,EAAAA;MAAA,CAAE;IAAb,CAAc;IACzBM,IAAI,EAAEL;GACP;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}