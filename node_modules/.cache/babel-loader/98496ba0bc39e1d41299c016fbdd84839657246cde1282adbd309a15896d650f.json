{"ast":null,"code":"import { timeStampNow } from '../../tools/utils/timeUtils';\nimport { normalizeUrl } from '../../tools/utils/urlPolyfill';\nimport { ExperimentalFeature, isExperimentalFeatureEnabled } from '../../tools/experimentalFeatures';\nimport { generateUUID } from '../../tools/utils/stringUtils';\nimport { INTAKE_SITE_US1, INTAKE_SITE_FED_STAGING, PCI_INTAKE_HOST_US1 } from './intakeSites';\nexport function createEndpointBuilder(initConfiguration, trackType, configurationTags) {\n  var buildUrlWithParameters = createEndpointUrlWithParametersBuilder(initConfiguration, trackType);\n  return {\n    build: function (api, payload) {\n      var parameters = buildEndpointParameters(initConfiguration, trackType, configurationTags, api, payload);\n      return buildUrlWithParameters(parameters);\n    },\n    urlPrefix: buildUrlWithParameters(''),\n    trackType: trackType\n  };\n}\n/**\n * Create a function used to build a full endpoint url from provided parameters. The goal of this\n * function is to pre-compute some parts of the URL to avoid re-computing everything on every\n * request, as only parameters are changing.\n */\nfunction createEndpointUrlWithParametersBuilder(initConfiguration, trackType) {\n  var path = \"/api/v2/\".concat(trackType);\n  var proxy = initConfiguration.proxy;\n  if (typeof proxy === 'string') {\n    var normalizedProxyUrl_1 = normalizeUrl(proxy);\n    return function (parameters) {\n      return \"\".concat(normalizedProxyUrl_1, \"?ddforward=\").concat(encodeURIComponent(\"\".concat(path, \"?\").concat(parameters)));\n    };\n  }\n  if (typeof proxy === 'function') {\n    return function (parameters) {\n      return proxy({\n        path: path,\n        parameters: parameters\n      });\n    };\n  }\n  var host = buildEndpointHost(trackType, initConfiguration);\n  return function (parameters) {\n    return \"https://\".concat(host).concat(path, \"?\").concat(parameters);\n  };\n}\nfunction buildEndpointHost(trackType, initConfiguration) {\n  var _a = initConfiguration.site,\n    site = _a === void 0 ? INTAKE_SITE_US1 : _a,\n    internalAnalyticsSubdomain = initConfiguration.internalAnalyticsSubdomain;\n  if (trackType === 'logs' && initConfiguration.usePciIntake && site === INTAKE_SITE_US1) {\n    return PCI_INTAKE_HOST_US1;\n  }\n  if (internalAnalyticsSubdomain && site === INTAKE_SITE_US1) {\n    return \"\".concat(internalAnalyticsSubdomain, \".\").concat(INTAKE_SITE_US1);\n  }\n  if (site === INTAKE_SITE_FED_STAGING) {\n    return \"http-intake.logs.\".concat(site);\n  }\n  var domainParts = site.split('.');\n  var extension = domainParts.pop();\n  return \"browser-intake-\".concat(domainParts.join('-'), \".\").concat(extension);\n}\n/**\n * Build parameters to be used for an intake request. Parameters should be re-built for each\n * request, as they change randomly.\n */\nfunction buildEndpointParameters(_a, trackType, configurationTags, api, _b) {\n  var clientToken = _a.clientToken,\n    internalAnalyticsSubdomain = _a.internalAnalyticsSubdomain;\n  var retry = _b.retry,\n    flushReason = _b.flushReason,\n    encoding = _b.encoding;\n  var tags = [\"sdk_version:\".concat(\"5.17.1\"), \"api:\".concat(api)].concat(configurationTags);\n  if (flushReason && isExperimentalFeatureEnabled(ExperimentalFeature.COLLECT_FLUSH_REASON)) {\n    tags.push(\"flush_reason:\".concat(flushReason));\n  }\n  if (retry) {\n    tags.push(\"retry_count:\".concat(retry.count), \"retry_after:\".concat(retry.lastFailureStatus));\n  }\n  var parameters = ['ddsource=browser', \"ddtags=\".concat(encodeURIComponent(tags.join(','))), \"dd-api-key=\".concat(clientToken), \"dd-evp-origin-version=\".concat(encodeURIComponent(\"5.17.1\")), 'dd-evp-origin=browser', \"dd-request-id=\".concat(generateUUID())];\n  if (encoding) {\n    parameters.push(\"dd-evp-encoding=\".concat(encoding));\n  }\n  if (trackType === 'rum') {\n    parameters.push(\"batch_time=\".concat(timeStampNow()));\n  }\n  if (internalAnalyticsSubdomain) {\n    parameters.reverse();\n  }\n  return parameters.join('&');\n}","map":{"version":3,"names":["timeStampNow","normalizeUrl","ExperimentalFeature","isExperimentalFeatureEnabled","generateUUID","INTAKE_SITE_US1","INTAKE_SITE_FED_STAGING","PCI_INTAKE_HOST_US1","createEndpointBuilder","initConfiguration","trackType","configurationTags","buildUrlWithParameters","createEndpointUrlWithParametersBuilder","build","api","payload","parameters","buildEndpointParameters","urlPrefix","path","concat","proxy","normalizedProxyUrl_1","encodeURIComponent","host","buildEndpointHost","_a","site","internalAnalyticsSubdomain","usePciIntake","domainParts","split","extension","pop","join","_b","clientToken","retry","flushReason","encoding","tags","COLLECT_FLUSH_REASON","push","count","lastFailureStatus","reverse"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-core\\src\\domain\\configuration\\endpointBuilder.ts"],"sourcesContent":["import type { Payload } from '../../transport'\nimport { timeStampNow } from '../../tools/utils/timeUtils'\nimport { normalizeUrl } from '../../tools/utils/urlPolyfill'\nimport { ExperimentalFeature, isExperimentalFeatureEnabled } from '../../tools/experimentalFeatures'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { InitConfiguration } from './configuration'\nimport { INTAKE_SITE_US1, INTAKE_SITE_FED_STAGING, PCI_INTAKE_HOST_US1 } from './intakeSites'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nexport type TrackType = 'logs' | 'rum' | 'replay'\nexport type ApiType =\n  | 'xhr'\n  | 'fetch'\n  | 'beacon'\n  // 'manual' reflects that the request have been sent manually, outside of the SDK (ex: via curl or\n  // a Node.js script).\n  | 'manual'\n\nexport type EndpointBuilder = ReturnType<typeof createEndpointBuilder>\n\nexport function createEndpointBuilder(\n  initConfiguration: InitConfiguration,\n  trackType: TrackType,\n  configurationTags: string[]\n) {\n  const buildUrlWithParameters = createEndpointUrlWithParametersBuilder(initConfiguration, trackType)\n\n  return {\n    build(api: ApiType, payload: Payload) {\n      const parameters = buildEndpointParameters(initConfiguration, trackType, configurationTags, api, payload)\n      return buildUrlWithParameters(parameters)\n    },\n    urlPrefix: buildUrlWithParameters(''),\n    trackType,\n  }\n}\n\n/**\n * Create a function used to build a full endpoint url from provided parameters. The goal of this\n * function is to pre-compute some parts of the URL to avoid re-computing everything on every\n * request, as only parameters are changing.\n */\nfunction createEndpointUrlWithParametersBuilder(\n  initConfiguration: InitConfiguration,\n  trackType: TrackType\n): (parameters: string) => string {\n  const path = `/api/v2/${trackType}`\n  const proxy = initConfiguration.proxy\n  if (typeof proxy === 'string') {\n    const normalizedProxyUrl = normalizeUrl(proxy)\n    return (parameters) => `${normalizedProxyUrl}?ddforward=${encodeURIComponent(`${path}?${parameters}`)}`\n  }\n  if (typeof proxy === 'function') {\n    return (parameters) => proxy({ path, parameters })\n  }\n  const host = buildEndpointHost(trackType, initConfiguration)\n  return (parameters) => `https://${host}${path}?${parameters}`\n}\n\nfunction buildEndpointHost(trackType: TrackType, initConfiguration: InitConfiguration & { usePciIntake?: boolean }) {\n  const { site = INTAKE_SITE_US1, internalAnalyticsSubdomain } = initConfiguration\n\n  if (trackType === 'logs' && initConfiguration.usePciIntake && site === INTAKE_SITE_US1) {\n    return PCI_INTAKE_HOST_US1\n  }\n\n  if (internalAnalyticsSubdomain && site === INTAKE_SITE_US1) {\n    return `${internalAnalyticsSubdomain}.${INTAKE_SITE_US1}`\n  }\n\n  if (site === INTAKE_SITE_FED_STAGING) {\n    return `http-intake.logs.${site}`\n  }\n\n  const domainParts = site.split('.')\n  const extension = domainParts.pop()\n  return `browser-intake-${domainParts.join('-')}.${extension!}`\n}\n\n/**\n * Build parameters to be used for an intake request. Parameters should be re-built for each\n * request, as they change randomly.\n */\nfunction buildEndpointParameters(\n  { clientToken, internalAnalyticsSubdomain }: InitConfiguration,\n  trackType: TrackType,\n  configurationTags: string[],\n  api: ApiType,\n  { retry, flushReason, encoding }: Payload\n) {\n  const tags = [`sdk_version:${__BUILD_ENV__SDK_VERSION__}`, `api:${api}`].concat(configurationTags)\n  if (flushReason && isExperimentalFeatureEnabled(ExperimentalFeature.COLLECT_FLUSH_REASON)) {\n    tags.push(`flush_reason:${flushReason}`)\n  }\n  if (retry) {\n    tags.push(`retry_count:${retry.count}`, `retry_after:${retry.lastFailureStatus}`)\n  }\n\n  const parameters = [\n    'ddsource=browser',\n    `ddtags=${encodeURIComponent(tags.join(','))}`,\n    `dd-api-key=${clientToken}`,\n    `dd-evp-origin-version=${encodeURIComponent(__BUILD_ENV__SDK_VERSION__)}`,\n    'dd-evp-origin=browser',\n    `dd-request-id=${generateUUID()}`,\n  ]\n\n  if (encoding) {\n    parameters.push(`dd-evp-encoding=${encoding}`)\n  }\n\n  if (trackType === 'rum') {\n    parameters.push(`batch_time=${timeStampNow()}`)\n  }\n\n  if (internalAnalyticsSubdomain) {\n    parameters.reverse()\n  }\n\n  return parameters.join('&')\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}