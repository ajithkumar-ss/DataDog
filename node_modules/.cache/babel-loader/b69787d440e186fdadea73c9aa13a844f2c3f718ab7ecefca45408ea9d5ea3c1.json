{"ast":null,"code":"/**\n * UUID v4\n * from https://gist.github.com/jed/982883\n */\nexport function generateUUID(placeholder) {\n  return placeholder ?\n  // eslint-disable-next-line  no-bitwise\n  (parseInt(placeholder, 10) ^ Math.random() * 16 >> parseInt(placeholder, 10) / 4).toString(16) : \"\".concat(1e7, \"-\").concat(1e3, \"-\").concat(4e3, \"-\").concat(8e3, \"-\").concat(1e11).replace(/[018]/g, generateUUID);\n}\nvar COMMA_SEPARATED_KEY_VALUE = /([\\w-]+)\\s*=\\s*([^;]+)/g;\nexport function findCommaSeparatedValue(rawString, name) {\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    var match = COMMA_SEPARATED_KEY_VALUE.exec(rawString);\n    if (match) {\n      if (match[1] === name) {\n        return match[2];\n      }\n    } else {\n      break;\n    }\n  }\n}\nexport function findCommaSeparatedValues(rawString) {\n  var result = new Map();\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    var match = COMMA_SEPARATED_KEY_VALUE.exec(rawString);\n    if (match) {\n      result.set(match[1], match[2]);\n    } else {\n      break;\n    }\n  }\n  return result;\n}\nexport function safeTruncate(candidate, length, suffix) {\n  if (suffix === void 0) {\n    suffix = '';\n  }\n  var lastChar = candidate.charCodeAt(length - 1);\n  var isLastCharSurrogatePair = lastChar >= 0xd800 && lastChar <= 0xdbff;\n  var correctedLength = isLastCharSurrogatePair ? length + 1 : length;\n  if (candidate.length <= correctedLength) {\n    return candidate;\n  }\n  return \"\".concat(candidate.slice(0, correctedLength)).concat(suffix);\n}","map":{"version":3,"names":["generateUUID","placeholder","parseInt","Math","random","toString","concat","replace","COMMA_SEPARATED_KEY_VALUE","findCommaSeparatedValue","rawString","name","lastIndex","match","exec","findCommaSeparatedValues","result","Map","set","safeTruncate","candidate","length","suffix","lastChar","charCodeAt","isLastCharSurrogatePair","correctedLength","slice"],"sources":["D:\\edu'\\Spritle\\spritle\\node_modules\\@datadog\\browser-core\\src\\tools\\utils\\stringUtils.ts"],"sourcesContent":["/**\n * UUID v4\n * from https://gist.github.com/jed/982883\n */\nexport function generateUUID(placeholder?: string): string {\n  return placeholder\n    ? // eslint-disable-next-line  no-bitwise\n      (parseInt(placeholder, 10) ^ ((Math.random() * 16) >> (parseInt(placeholder, 10) / 4))).toString(16)\n    : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, generateUUID)\n}\n\nconst COMMA_SEPARATED_KEY_VALUE = /([\\w-]+)\\s*=\\s*([^;]+)/g\n\nexport function findCommaSeparatedValue(rawString: string, name: string): string | undefined {\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const match = COMMA_SEPARATED_KEY_VALUE.exec(rawString)\n    if (match) {\n      if (match[1] === name) {\n        return match[2]\n      }\n    } else {\n      break\n    }\n  }\n}\n\nexport function findCommaSeparatedValues(rawString: string): Map<string, string> {\n  const result = new Map<string, string>()\n  COMMA_SEPARATED_KEY_VALUE.lastIndex = 0\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const match = COMMA_SEPARATED_KEY_VALUE.exec(rawString)\n    if (match) {\n      result.set(match[1], match[2])\n    } else {\n      break\n    }\n  }\n  return result\n}\n\nexport function safeTruncate(candidate: string, length: number, suffix = '') {\n  const lastChar = candidate.charCodeAt(length - 1)\n  const isLastCharSurrogatePair = lastChar >= 0xd800 && lastChar <= 0xdbff\n  const correctedLength = isLastCharSurrogatePair ? length + 1 : length\n\n  if (candidate.length <= correctedLength) {\n    return candidate\n  }\n\n  return `${candidate.slice(0, correctedLength)}${suffix}`\n}\n"],"mappings":"AAAA;;;;AAIA,OAAM,SAAUA,YAAYA,CAACC,WAAoB;EAC/C,OAAOA,WAAW;EACd;EACA,CAACC,QAAQ,CAACD,WAAW,EAAE,EAAE,CAAC,GAAKE,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,IAAMF,QAAQ,CAACD,WAAW,EAAE,EAAE,CAAC,GAAG,CAAG,EAAEI,QAAQ,CAAC,EAAE,CAAC,GACpG,GAAAC,MAAA,CAAG,GAAG,OAAAA,MAAA,CAAI,GAAG,OAAAA,MAAA,CAAI,GAAG,OAAAA,MAAA,CAAI,GAAG,OAAAA,MAAA,CAAI,IAAI,CAAE,CAACC,OAAO,CAAC,QAAQ,EAAEP,YAAY,CAAC;AAC3E;AAEA,IAAMQ,yBAAyB,GAAG,yBAAyB;AAE3D,OAAM,SAAUC,uBAAuBA,CAACC,SAAiB,EAAEC,IAAY;EACrEH,yBAAyB,CAACI,SAAS,GAAG,CAAC;EACvC;EACA,OAAO,IAAI,EAAE;IACX,IAAMC,KAAK,GAAGL,yBAAyB,CAACM,IAAI,CAACJ,SAAS,CAAC;IACvD,IAAIG,KAAK,EAAE;MACT,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKF,IAAI,EAAE;QACrB,OAAOE,KAAK,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,MAAM;MACL;IACF;EACF;AACF;AAEA,OAAM,SAAUE,wBAAwBA,CAACL,SAAiB;EACxD,IAAMM,MAAM,GAAG,IAAIC,GAAG,EAAkB;EACxCT,yBAAyB,CAACI,SAAS,GAAG,CAAC;EACvC;EACA,OAAO,IAAI,EAAE;IACX,IAAMC,KAAK,GAAGL,yBAAyB,CAACM,IAAI,CAACJ,SAAS,CAAC;IACvD,IAAIG,KAAK,EAAE;MACTG,MAAM,CAACE,GAAG,CAACL,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACL;IACF;EACF;EACA,OAAOG,MAAM;AACf;AAEA,OAAM,SAAUG,YAAYA,CAACC,SAAiB,EAAEC,MAAc,EAAEC,MAAW;EAAX,IAAAA,MAAA;IAAAA,MAAA,KAAW;EAAA;EACzE,IAAMC,QAAQ,GAAGH,SAAS,CAACI,UAAU,CAACH,MAAM,GAAG,CAAC,CAAC;EACjD,IAAMI,uBAAuB,GAAGF,QAAQ,IAAI,MAAM,IAAIA,QAAQ,IAAI,MAAM;EACxE,IAAMG,eAAe,GAAGD,uBAAuB,GAAGJ,MAAM,GAAG,CAAC,GAAGA,MAAM;EAErE,IAAID,SAAS,CAACC,MAAM,IAAIK,eAAe,EAAE;IACvC,OAAON,SAAS;EAClB;EAEA,OAAO,GAAAd,MAAA,CAAGc,SAAS,CAACO,KAAK,CAAC,CAAC,EAAED,eAAe,CAAC,EAAApB,MAAA,CAAGgB,MAAM,CAAE;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}