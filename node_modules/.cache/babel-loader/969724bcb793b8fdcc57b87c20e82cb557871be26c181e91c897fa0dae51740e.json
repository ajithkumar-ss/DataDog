{"ast":null,"code":"import { Observable } from '../tools/observable';\nexport var TrackingConsent = {\n  GRANTED: 'granted',\n  NOT_GRANTED: 'not-granted'\n};\nexport function createTrackingConsentState(currentConsent) {\n  var observable = new Observable();\n  return {\n    tryToInit: function (trackingConsent) {\n      if (!currentConsent) {\n        currentConsent = trackingConsent;\n      }\n    },\n    update: function (trackingConsent) {\n      currentConsent = trackingConsent;\n      observable.notify();\n    },\n    isGranted: function () {\n      return currentConsent === TrackingConsent.GRANTED;\n    },\n    observable: observable\n  };\n}","map":{"version":3,"names":["Observable","TrackingConsent","GRANTED","NOT_GRANTED","createTrackingConsentState","currentConsent","observable","tryToInit","trackingConsent","update","notify","isGranted"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-core\\src\\domain\\trackingConsent.ts"],"sourcesContent":["import { Observable } from '../tools/observable'\n\nexport const TrackingConsent = {\n  GRANTED: 'granted',\n  NOT_GRANTED: 'not-granted',\n} as const\nexport type TrackingConsent = (typeof TrackingConsent)[keyof typeof TrackingConsent]\n\nexport interface TrackingConsentState {\n  tryToInit: (trackingConsent: TrackingConsent) => void\n  update: (trackingConsent: TrackingConsent) => void\n  isGranted: () => boolean\n  observable: Observable<void>\n}\n\nexport function createTrackingConsentState(currentConsent?: TrackingConsent): TrackingConsentState {\n  const observable = new Observable<void>()\n\n  return {\n    tryToInit(trackingConsent: TrackingConsent) {\n      if (!currentConsent) {\n        currentConsent = trackingConsent\n      }\n    },\n    update(trackingConsent: TrackingConsent) {\n      currentConsent = trackingConsent\n      observable.notify()\n    },\n    isGranted() {\n      return currentConsent === TrackingConsent.GRANTED\n    },\n    observable,\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,qBAAqB;AAEhD,OAAO,IAAMC,eAAe,GAAG;EAC7BC,OAAO,EAAE,SAAS;EAClBC,WAAW,EAAE;CACL;AAUV,OAAM,SAAUC,0BAA0BA,CAACC,cAAgC;EACzE,IAAMC,UAAU,GAAG,IAAIN,UAAU,EAAQ;EAEzC,OAAO;IACLO,SAAS,WAAAA,CAACC,eAAgC;MACxC,IAAI,CAACH,cAAc,EAAE;QACnBA,cAAc,GAAGG,eAAe;MAClC;IACF,CAAC;IACDC,MAAM,WAAAA,CAACD,eAAgC;MACrCH,cAAc,GAAGG,eAAe;MAChCF,UAAU,CAACI,MAAM,EAAE;IACrB,CAAC;IACDC,SAAS,WAAAA,CAAA;MACP,OAAON,cAAc,KAAKJ,eAAe,CAACC,OAAO;IACnD,CAAC;IACDI,UAAU,EAAAA;GACX;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}