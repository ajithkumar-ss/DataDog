{"ast":null,"code":"import { SESSION_TIME_OUT_DELAY, ValueHistory } from '@datadog/browser-core';\nexport var FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport var BYTES_COMPUTATION_THROTTLING_DELAY = 200;\n/**\n * Start feature flag contexts\n *\n * Feature flag contexts follow the life of views.\n * A new context is added when a view is created and ended when the view is ended\n *\n * Note: we choose not to add a new context at each evaluation to save memory\n */\nexport function startFeatureFlagContexts(lifeCycle, customerDataTracker) {\n  var featureFlagContexts = new ValueHistory(FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY);\n  lifeCycle.subscribe(2 /* LifeCycleEventType.BEFORE_VIEW_CREATED */, function (_a) {\n    var startClocks = _a.startClocks;\n    featureFlagContexts.add({}, startClocks.relative);\n    customerDataTracker.resetCustomerData();\n  });\n  lifeCycle.subscribe(6 /* LifeCycleEventType.AFTER_VIEW_ENDED */, function (_a) {\n    var endClocks = _a.endClocks;\n    featureFlagContexts.closeActive(endClocks.relative);\n  });\n  return {\n    findFeatureFlagEvaluations: function (startTime) {\n      return featureFlagContexts.find(startTime);\n    },\n    addFeatureFlagEvaluation: function (key, value) {\n      var currentContext = featureFlagContexts.find();\n      if (currentContext) {\n        currentContext[key] = value;\n        customerDataTracker.updateCustomerData(currentContext);\n      }\n    },\n    stop: function () {\n      return customerDataTracker.stop();\n    }\n  };\n}","map":{"version":3,"names":["SESSION_TIME_OUT_DELAY","ValueHistory","FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY","BYTES_COMPUTATION_THROTTLING_DELAY","startFeatureFlagContexts","lifeCycle","customerDataTracker","featureFlagContexts","subscribe","_a","startClocks","add","relative","resetCustomerData","endClocks","closeActive","findFeatureFlagEvaluations","startTime","find","addFeatureFlagEvaluation","key","value","currentContext","updateCustomerData","stop"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\domain\\contexts\\featureFlagContext.ts"],"sourcesContent":["import type { RelativeTime, ContextValue, Context, CustomerDataTracker } from '@datadog/browser-core'\nimport { SESSION_TIME_OUT_DELAY, ValueHistory } from '@datadog/browser-core'\nimport type { LifeCycle } from '../lifeCycle'\nimport { LifeCycleEventType } from '../lifeCycle'\n\nexport const FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY\nexport const BYTES_COMPUTATION_THROTTLING_DELAY = 200\n\nexport type FeatureFlagContext = Context\n\nexport interface FeatureFlagContexts {\n  findFeatureFlagEvaluations: (startTime?: RelativeTime) => FeatureFlagContext | undefined\n  addFeatureFlagEvaluation: (key: string, value: ContextValue) => void\n  stop: () => void\n}\n\n/**\n * Start feature flag contexts\n *\n * Feature flag contexts follow the life of views.\n * A new context is added when a view is created and ended when the view is ended\n *\n * Note: we choose not to add a new context at each evaluation to save memory\n */\nexport function startFeatureFlagContexts(\n  lifeCycle: LifeCycle,\n  customerDataTracker: CustomerDataTracker\n): FeatureFlagContexts {\n  const featureFlagContexts = new ValueHistory<FeatureFlagContext>(FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY)\n\n  lifeCycle.subscribe(LifeCycleEventType.BEFORE_VIEW_CREATED, ({ startClocks }) => {\n    featureFlagContexts.add({}, startClocks.relative)\n    customerDataTracker.resetCustomerData()\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.AFTER_VIEW_ENDED, ({ endClocks }) => {\n    featureFlagContexts.closeActive(endClocks.relative)\n  })\n\n  return {\n    findFeatureFlagEvaluations: (startTime?: RelativeTime) => featureFlagContexts.find(startTime),\n    addFeatureFlagEvaluation: (key: string, value: ContextValue) => {\n      const currentContext = featureFlagContexts.find()\n      if (currentContext) {\n        currentContext[key] = value\n        customerDataTracker.updateCustomerData(currentContext)\n      }\n    },\n    stop: () => customerDataTracker.stop(),\n  }\n}\n"],"mappings":"AACA,SAASA,sBAAsB,EAAEC,YAAY,QAAQ,uBAAuB;AAI5E,OAAO,IAAMC,mCAAmC,GAAGF,sBAAsB;AACzE,OAAO,IAAMG,kCAAkC,GAAG,GAAG;AAUrD;;;;;;;;AAQA,OAAM,SAAUC,wBAAwBA,CACtCC,SAAoB,EACpBC,mBAAwC;EAExC,IAAMC,mBAAmB,GAAG,IAAIN,YAAY,CAAqBC,mCAAmC,CAAC;EAErGG,SAAS,CAACG,SAAS,iDAAyC,UAACC,EAAe;QAAbC,WAAW,GAAAD,EAAA,CAAAC,WAAA;IACxEH,mBAAmB,CAACI,GAAG,CAAC,EAAE,EAAED,WAAW,CAACE,QAAQ,CAAC;IACjDN,mBAAmB,CAACO,iBAAiB,EAAE;EACzC,CAAC,CAAC;EAEFR,SAAS,CAACG,SAAS,8CAAsC,UAACC,EAAa;QAAXK,SAAS,GAAAL,EAAA,CAAAK,SAAA;IACnEP,mBAAmB,CAACQ,WAAW,CAACD,SAAS,CAACF,QAAQ,CAAC;EACrD,CAAC,CAAC;EAEF,OAAO;IACLI,0BAA0B,EAAE,SAAAA,CAACC,SAAwB;MAAK,OAAAV,mBAAmB,CAACW,IAAI,CAACD,SAAS,CAAC;IAAnC,CAAmC;IAC7FE,wBAAwB,EAAE,SAAAA,CAACC,GAAW,EAAEC,KAAmB;MACzD,IAAMC,cAAc,GAAGf,mBAAmB,CAACW,IAAI,EAAE;MACjD,IAAII,cAAc,EAAE;QAClBA,cAAc,CAACF,GAAG,CAAC,GAAGC,KAAK;QAC3Bf,mBAAmB,CAACiB,kBAAkB,CAACD,cAAc,CAAC;MACxD;IACF,CAAC;IACDE,IAAI,EAAE,SAAAA,CAAA;MAAM,OAAAlB,mBAAmB,CAACkB,IAAI,EAAE;IAA1B;GACb;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}