{"ast":null,"code":"import { setInterval, clearInterval, Observable, addEventListener, ONE_SECOND, findCommaSeparatedValue, DOM_EVENT, find } from '@datadog/browser-core';\nexport function createCookieObservable(configuration, cookieName) {\n  var detectCookieChangeStrategy = window.cookieStore ? listenToCookieStoreChange(configuration) : watchCookieFallback;\n  return new Observable(function (observable) {\n    return detectCookieChangeStrategy(cookieName, function (event) {\n      return observable.notify(event);\n    });\n  });\n}\nfunction listenToCookieStoreChange(configuration) {\n  return function (cookieName, callback) {\n    var listener = addEventListener(configuration, window.cookieStore, DOM_EVENT.CHANGE, function (event) {\n      // Based on our experimentation, we're assuming that entries for the same cookie cannot be in both the 'changed' and 'deleted' arrays.\n      // However, due to ambiguity in the specification, we asked for clarification: https://github.com/WICG/cookie-store/issues/226\n      var changeEvent = find(event.changed, function (event) {\n        return event.name === cookieName;\n      }) || find(event.deleted, function (event) {\n        return event.name === cookieName;\n      });\n      if (changeEvent) {\n        callback(changeEvent.value);\n      }\n    });\n    return listener.stop;\n  };\n}\nexport var WATCH_COOKIE_INTERVAL_DELAY = ONE_SECOND;\nfunction watchCookieFallback(cookieName, callback) {\n  var previousCookieValue = findCommaSeparatedValue(document.cookie, cookieName);\n  var watchCookieIntervalId = setInterval(function () {\n    var cookieValue = findCommaSeparatedValue(document.cookie, cookieName);\n    if (cookieValue !== previousCookieValue) {\n      callback(cookieValue);\n    }\n  }, WATCH_COOKIE_INTERVAL_DELAY);\n  return function () {\n    clearInterval(watchCookieIntervalId);\n  };\n}","map":{"version":3,"names":["setInterval","clearInterval","Observable","addEventListener","ONE_SECOND","findCommaSeparatedValue","DOM_EVENT","find","createCookieObservable","configuration","cookieName","detectCookieChangeStrategy","window","cookieStore","listenToCookieStoreChange","watchCookieFallback","observable","event","notify","callback","listener","CHANGE","changeEvent","changed","name","deleted","value","stop","WATCH_COOKIE_INTERVAL_DELAY","previousCookieValue","document","cookie","watchCookieIntervalId","cookieValue"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum-core\\src\\browser\\cookieObservable.ts"],"sourcesContent":["import type { Configuration, CookieStore } from '@datadog/browser-core'\nimport {\n  setInterval,\n  clearInterval,\n  Observable,\n  addEventListener,\n  ONE_SECOND,\n  findCommaSeparatedValue,\n  DOM_EVENT,\n  find,\n} from '@datadog/browser-core'\n\nexport interface CookieStoreWindow extends Window {\n  cookieStore?: CookieStore\n}\n\nexport type CookieObservable = ReturnType<typeof createCookieObservable>\n\nexport function createCookieObservable(configuration: Configuration, cookieName: string) {\n  const detectCookieChangeStrategy = (window as CookieStoreWindow).cookieStore\n    ? listenToCookieStoreChange(configuration)\n    : watchCookieFallback\n\n  return new Observable<string | undefined>((observable) =>\n    detectCookieChangeStrategy(cookieName, (event) => observable.notify(event))\n  )\n}\n\nfunction listenToCookieStoreChange(configuration: Configuration) {\n  return (cookieName: string, callback: (event: string | undefined) => void) => {\n    const listener = addEventListener(\n      configuration,\n      (window as CookieStoreWindow).cookieStore!,\n      DOM_EVENT.CHANGE,\n      (event) => {\n        // Based on our experimentation, we're assuming that entries for the same cookie cannot be in both the 'changed' and 'deleted' arrays.\n        // However, due to ambiguity in the specification, we asked for clarification: https://github.com/WICG/cookie-store/issues/226\n        const changeEvent =\n          find(event.changed, (event) => event.name === cookieName) ||\n          find(event.deleted, (event) => event.name === cookieName)\n        if (changeEvent) {\n          callback(changeEvent.value)\n        }\n      }\n    )\n    return listener.stop\n  }\n}\n\nexport const WATCH_COOKIE_INTERVAL_DELAY = ONE_SECOND\n\nfunction watchCookieFallback(cookieName: string, callback: (event: string | undefined) => void) {\n  const previousCookieValue = findCommaSeparatedValue(document.cookie, cookieName)\n  const watchCookieIntervalId = setInterval(() => {\n    const cookieValue = findCommaSeparatedValue(document.cookie, cookieName)\n    if (cookieValue !== previousCookieValue) {\n      callback(cookieValue)\n    }\n  }, WATCH_COOKIE_INTERVAL_DELAY)\n\n  return () => {\n    clearInterval(watchCookieIntervalId)\n  }\n}\n"],"mappings":"AACA,SACEA,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,gBAAgB,EAChBC,UAAU,EACVC,uBAAuB,EACvBC,SAAS,EACTC,IAAI,QACC,uBAAuB;AAQ9B,OAAM,SAAUC,sBAAsBA,CAACC,aAA4B,EAAEC,UAAkB;EACrF,IAAMC,0BAA0B,GAAIC,MAA4B,CAACC,WAAW,GACxEC,yBAAyB,CAACL,aAAa,CAAC,GACxCM,mBAAmB;EAEvB,OAAO,IAAIb,UAAU,CAAqB,UAACc,UAAU;IACnD,OAAAL,0BAA0B,CAACD,UAAU,EAAE,UAACO,KAAK;MAAK,OAAAD,UAAU,CAACE,MAAM,CAACD,KAAK,CAAC;IAAxB,CAAwB,CAAC;EAA3E,CAA2E,CAC5E;AACH;AAEA,SAASH,yBAAyBA,CAACL,aAA4B;EAC7D,OAAO,UAACC,UAAkB,EAAES,QAA6C;IACvE,IAAMC,QAAQ,GAAGjB,gBAAgB,CAC/BM,aAAa,EACZG,MAA4B,CAACC,WAAY,EAC1CP,SAAS,CAACe,MAAM,EAChB,UAACJ,KAAK;MACJ;MACA;MACA,IAAMK,WAAW,GACff,IAAI,CAACU,KAAK,CAACM,OAAO,EAAE,UAACN,KAAK;QAAK,OAAAA,KAAK,CAACO,IAAI,KAAKd,UAAU;MAAzB,CAAyB,CAAC,IACzDH,IAAI,CAACU,KAAK,CAACQ,OAAO,EAAE,UAACR,KAAK;QAAK,OAAAA,KAAK,CAACO,IAAI,KAAKd,UAAU;MAAzB,CAAyB,CAAC;MAC3D,IAAIY,WAAW,EAAE;QACfH,QAAQ,CAACG,WAAW,CAACI,KAAK,CAAC;MAC7B;IACF,CAAC,CACF;IACD,OAAON,QAAQ,CAACO,IAAI;EACtB,CAAC;AACH;AAEA,OAAO,IAAMC,2BAA2B,GAAGxB,UAAU;AAErD,SAASW,mBAAmBA,CAACL,UAAkB,EAAES,QAA6C;EAC5F,IAAMU,mBAAmB,GAAGxB,uBAAuB,CAACyB,QAAQ,CAACC,MAAM,EAAErB,UAAU,CAAC;EAChF,IAAMsB,qBAAqB,GAAGhC,WAAW,CAAC;IACxC,IAAMiC,WAAW,GAAG5B,uBAAuB,CAACyB,QAAQ,CAACC,MAAM,EAAErB,UAAU,CAAC;IACxE,IAAIuB,WAAW,KAAKJ,mBAAmB,EAAE;MACvCV,QAAQ,CAACc,WAAW,CAAC;IACvB;EACF,CAAC,EAAEL,2BAA2B,CAAC;EAE/B,OAAO;IACL3B,aAAa,CAAC+B,qBAAqB,CAAC;EACtC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}