{"ast":null,"code":"import { getScrollX, getScrollY, getViewportDimension } from '@datadog/browser-rum-core';\nimport { timeStampNow } from '@datadog/browser-core';\nimport { RecordType } from '../../types';\nimport { serializeDocument } from './serialization';\nimport { getVisualViewport } from './viewports';\nexport function startFullSnapshots(elementsScrollPositions, shadowRootsController, lifeCycle, configuration, flushMutations, fullSnapshotCallback) {\n  var takeFullSnapshot = function (timestamp, serializationContext) {\n    if (timestamp === void 0) {\n      timestamp = timeStampNow();\n    }\n    if (serializationContext === void 0) {\n      serializationContext = {\n        status: 0 /* SerializationContextStatus.INITIAL_FULL_SNAPSHOT */,\n        elementsScrollPositions: elementsScrollPositions,\n        shadowRootsController: shadowRootsController\n      };\n    }\n    var _a = getViewportDimension(),\n      width = _a.width,\n      height = _a.height;\n    var records = [{\n      data: {\n        height: height,\n        href: window.location.href,\n        width: width\n      },\n      type: RecordType.Meta,\n      timestamp: timestamp\n    }, {\n      data: {\n        has_focus: document.hasFocus()\n      },\n      type: RecordType.Focus,\n      timestamp: timestamp\n    }, {\n      data: {\n        node: serializeDocument(document, configuration, serializationContext),\n        initialOffset: {\n          left: getScrollX(),\n          top: getScrollY()\n        }\n      },\n      type: RecordType.FullSnapshot,\n      timestamp: timestamp\n    }];\n    if (window.visualViewport) {\n      records.push({\n        data: getVisualViewport(window.visualViewport),\n        type: RecordType.VisualViewport,\n        timestamp: timestamp\n      });\n    }\n    return records;\n  };\n  fullSnapshotCallback(takeFullSnapshot());\n  var unsubscribe = lifeCycle.subscribe(3 /* LifeCycleEventType.VIEW_CREATED */, function (view) {\n    flushMutations();\n    fullSnapshotCallback(takeFullSnapshot(view.startClocks.timeStamp, {\n      shadowRootsController: shadowRootsController,\n      status: 1 /* SerializationContextStatus.SUBSEQUENT_FULL_SNAPSHOT */,\n      elementsScrollPositions: elementsScrollPositions\n    }));\n  }).unsubscribe;\n  return {\n    stop: unsubscribe\n  };\n}","map":{"version":3,"names":["getScrollX","getScrollY","getViewportDimension","timeStampNow","RecordType","serializeDocument","getVisualViewport","startFullSnapshots","elementsScrollPositions","shadowRootsController","lifeCycle","configuration","flushMutations","fullSnapshotCallback","takeFullSnapshot","timestamp","serializationContext","status","_a","width","height","records","data","href","window","location","type","Meta","has_focus","document","hasFocus","Focus","node","initialOffset","left","top","FullSnapshot","visualViewport","push","VisualViewport","unsubscribe","subscribe","view","startClocks","timeStamp","stop"],"sources":["D:\\edu'\\Spritle\\Spritle\\node_modules\\@datadog\\browser-rum\\src\\domain\\record\\startFullSnapshots.ts"],"sourcesContent":["import { LifeCycleEventType, getScrollX, getScrollY, getViewportDimension } from '@datadog/browser-rum-core'\nimport type { RumConfiguration, LifeCycle } from '@datadog/browser-rum-core'\nimport { timeStampNow } from '@datadog/browser-core'\nimport type { BrowserRecord } from '../../types'\nimport { RecordType } from '../../types'\nimport type { ElementsScrollPositions } from './elementsScrollPositions'\nimport type { ShadowRootsController } from './shadowRootsController'\nimport { SerializationContextStatus, serializeDocument } from './serialization'\nimport { getVisualViewport } from './viewports'\n\nexport function startFullSnapshots(\n  elementsScrollPositions: ElementsScrollPositions,\n  shadowRootsController: ShadowRootsController,\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  flushMutations: () => void,\n  fullSnapshotCallback: (records: BrowserRecord[]) => void\n) {\n  const takeFullSnapshot = (\n    timestamp = timeStampNow(),\n    serializationContext = {\n      status: SerializationContextStatus.INITIAL_FULL_SNAPSHOT,\n      elementsScrollPositions,\n      shadowRootsController,\n    }\n  ) => {\n    const { width, height } = getViewportDimension()\n    const records: BrowserRecord[] = [\n      {\n        data: {\n          height,\n          href: window.location.href,\n          width,\n        },\n        type: RecordType.Meta,\n        timestamp,\n      },\n      {\n        data: {\n          has_focus: document.hasFocus(),\n        },\n        type: RecordType.Focus,\n        timestamp,\n      },\n      {\n        data: {\n          node: serializeDocument(document, configuration, serializationContext),\n          initialOffset: {\n            left: getScrollX(),\n            top: getScrollY(),\n          },\n        },\n        type: RecordType.FullSnapshot,\n        timestamp,\n      },\n    ]\n\n    if (window.visualViewport) {\n      records.push({\n        data: getVisualViewport(window.visualViewport),\n        type: RecordType.VisualViewport,\n        timestamp,\n      })\n    }\n    return records\n  }\n\n  fullSnapshotCallback(takeFullSnapshot())\n\n  const { unsubscribe } = lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, (view) => {\n    flushMutations()\n    fullSnapshotCallback(\n      takeFullSnapshot(view.startClocks.timeStamp, {\n        shadowRootsController,\n        status: SerializationContextStatus.SUBSEQUENT_FULL_SNAPSHOT,\n        elementsScrollPositions,\n      })\n    )\n  })\n\n  return {\n    stop: unsubscribe,\n  }\n}\n"],"mappings":"AAAA,SAA6BA,UAAU,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,2BAA2B;AAE5G,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,SAASC,UAAU,QAAQ,aAAa;AAGxC,SAAqCC,iBAAiB,QAAQ,iBAAiB;AAC/E,SAASC,iBAAiB,QAAQ,aAAa;AAE/C,OAAM,SAAUC,kBAAkBA,CAChCC,uBAAgD,EAChDC,qBAA4C,EAC5CC,SAAoB,EACpBC,aAA+B,EAC/BC,cAA0B,EAC1BC,oBAAwD;EAExD,IAAMC,gBAAgB,GAAG,SAAAA,CACvBC,SAA0B,EAC1BC,oBAIC;IALD,IAAAD,SAAA;MAAAA,SAAA,GAAYZ,YAAY,EAAE;IAAA;IAC1B,IAAAa,oBAAA;MAAAA,oBAAA;QACEC,MAAM;QACNT,uBAAuB,EAAAA,uBAAA;QACvBC,qBAAqB,EAAAA;OACtB;IAAA;IAEK,IAAAS,EAAA,GAAoBhB,oBAAoB,EAAE;MAAxCiB,KAAK,GAAAD,EAAA,CAAAC,KAAA;MAAEC,MAAM,GAAAF,EAAA,CAAAE,MAA2B;IAChD,IAAMC,OAAO,GAAoB,CAC/B;MACEC,IAAI,EAAE;QACJF,MAAM,EAAAA,MAAA;QACNG,IAAI,EAAEC,MAAM,CAACC,QAAQ,CAACF,IAAI;QAC1BJ,KAAK,EAAAA;OACN;MACDO,IAAI,EAAEtB,UAAU,CAACuB,IAAI;MACrBZ,SAAS,EAAAA;KACV,EACD;MACEO,IAAI,EAAE;QACJM,SAAS,EAAEC,QAAQ,CAACC,QAAQ;OAC7B;MACDJ,IAAI,EAAEtB,UAAU,CAAC2B,KAAK;MACtBhB,SAAS,EAAAA;KACV,EACD;MACEO,IAAI,EAAE;QACJU,IAAI,EAAE3B,iBAAiB,CAACwB,QAAQ,EAAElB,aAAa,EAAEK,oBAAoB,CAAC;QACtEiB,aAAa,EAAE;UACbC,IAAI,EAAElC,UAAU,EAAE;UAClBmC,GAAG,EAAElC,UAAU;;OAElB;MACDyB,IAAI,EAAEtB,UAAU,CAACgC,YAAY;MAC7BrB,SAAS,EAAAA;KACV,CACF;IAED,IAAIS,MAAM,CAACa,cAAc,EAAE;MACzBhB,OAAO,CAACiB,IAAI,CAAC;QACXhB,IAAI,EAAEhB,iBAAiB,CAACkB,MAAM,CAACa,cAAc,CAAC;QAC9CX,IAAI,EAAEtB,UAAU,CAACmC,cAAc;QAC/BxB,SAAS,EAAAA;OACV,CAAC;IACJ;IACA,OAAOM,OAAO;EAChB,CAAC;EAEDR,oBAAoB,CAACC,gBAAgB,EAAE,CAAC;EAEhC,IAAA0B,WAAW,GAAK9B,SAAS,CAAC+B,SAAS,0CAAkC,UAACC,IAAI;IAChF9B,cAAc,EAAE;IAChBC,oBAAoB,CAClBC,gBAAgB,CAAC4B,IAAI,CAACC,WAAW,CAACC,SAAS,EAAE;MAC3CnC,qBAAqB,EAAAA,qBAAA;MACrBQ,MAAM;MACNT,uBAAuB,EAAAA;KACxB,CAAC,CACH;EACH,CAAC,CAAC,CAAAgC,WATiB;EAWnB,OAAO;IACLK,IAAI,EAAEL;GACP;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}