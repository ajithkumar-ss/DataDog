[{"D:\\edu'\\Spritle\\spritle\\src\\index.jsx":"1","D:\\edu'\\Spritle\\spritle\\src\\App.jsx":"2","D:\\edu'\\Spritle\\spritle\\src\\Datadog\\MyComponent.jsx":"3","D:\\edu'\\Spritle\\spritle\\src\\Datadog\\Table.jsx":"4","D:\\edu'\\Spritle\\spritle\\src\\Datadog\\Form.jsx":"5"},{"size":342,"mtime":1715103183789,"results":"6","hashOfConfig":"7"},{"size":506,"mtime":1715509807483,"results":"8","hashOfConfig":"7"},{"size":1377,"mtime":1715520812700,"results":"9","hashOfConfig":"7"},{"size":1079,"mtime":1715514325756,"results":"10","hashOfConfig":"7"},{"size":1233,"mtime":1715520846629,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9phofl",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\edu'\\Spritle\\spritle\\src\\index.jsx",[],[],"D:\\edu'\\Spritle\\spritle\\src\\App.jsx",[],[],"D:\\edu'\\Spritle\\spritle\\src\\Datadog\\MyComponent.jsx",[],[],"D:\\edu'\\Spritle\\spritle\\src\\Datadog\\Table.jsx",["27"],[],"D:\\edu'\\Spritle\\spritle\\src\\Datadog\\Form.jsx",[],[],{"ruleId":"28","severity":1,"message":"29","line":11,"column":9,"nodeType":"30","endLine":13,"endColumn":4},"react-hooks/exhaustive-deps","The 'resp' function makes the dependencies of useEffect Hook (at line 17) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'resp' in its own useCallback() Hook.","VariableDeclarator"]